{"version":3,"sources":["components/Header/Header.js","contexts/SettingsContext.jsx","components/generic/CustomModal.jsx","components/generic/CustomAlert.jsx","components/Home/Home.js","components/generic/EmailConfirmationSent.jsx","components/generic/EmailConfirm.jsx","components/generic/NotFound.jsx","components/generic/LoadingScreen.jsx","components/generic/PasswordReset.jsx","contexts/AuthenticationContext.jsx","components/Authentication/Profile.jsx","components/generic/PasswordChange.jsx","components/Rooms/Sections/Items/DeleteItemModal.jsx","components/Rooms/Sections/Items/UpdateItemModal.jsx","components/Rooms/Sections/Items/Comments/AddComment.jsx","components/generic/Counter.jsx","components/Rooms/Sections/Items/Comments/CommentAttachmentModal.jsx","components/Rooms/Sections/Items/Comments/Comment.jsx","components/Rooms/Sections/Items/Comments/Comments.jsx","components/Rooms/Sections/Items/CreateItemModal.jsx","components/Rooms/Sections/Items/Items.jsx","components/Rooms/Sections/CreateSectionModal.jsx","components/Rooms/Sections/DeleteSectionModal.jsx","components/Rooms/Sections/UpdateSectionModal.jsx","components/Rooms/Sections/Sections.jsx","components/Rooms/RoomMembers.jsx","components/Rooms/RoomMembersModal.jsx","components/Rooms/UpdateRoomModal.jsx","components/Rooms/Rooms.jsx","components/Authentication/SignIn.js","components/Authentication/SignUp.js","components/Notifications/Notifications.js","components/Navbar/Navbar.js","components/Dept/Dept.js","components/CreateCourse/CreateCourse.js","components/My_Rooms/MyRooms.js","Simulations/Simulation.js","components/Footer/Footer.jsx","Simulations/SimulationSubjects.js","Simulations/BiologySimulations.js","Simulations/PhysicsSimulations.js","Simulations/ChemistrySimulations.js","components/Authentication/SignInPage.jsx","components/generic/PasswordResetConfirm.jsx","components/legends/Us.jsx","App.js","index.js"],"names":["Header","className","Container","Component","SettingsContext","createContext","SettingsContextProvider","props","useState","isAnimated","setIsAnimated","Provider","value","changeIsAnimated","children","withRouter","useContext","show","setShow","handleClose","handleCloseAction","noAction","onClick","disabled","edit","style","actionButtonStyle","actionButtonClass","Modal","centered","onHide","animation","closeButton","Title","modalTitle","Body","modalBody","Footer","variant","actionVariant","redirect","history","push","handleAction","CustomAlert","Alert","alertClass","status","axios","require","Home","state","dept","rooms","dept_id","promise","dept_size","undefined","pending_rooms_id","enrolled_rooms_id","a","config","headers","fetchdept","get","then","response","tmparray","i","data","length","setState","catch","err","fetchrooms","endpoint1","id","current_dept_id","j","fetchuserrooms","tmprooms","k","fetchUserPendingRooms","fetch","method","json","tmp","localStorage","getItem","fetch_dept_name","endpoint3","setItem","name","room_id","isPending","API_URL","formData","FormData","body","ok","detail","loadData","this","deptcoursel","settings","infinite","speed","slidesToShow","slidesToScroll","dots","responsive","breakpoint","arrows","Object","keys","map","iitem","key","cssstyle","item","Card","border","course","split","year","Subtitle","includes","to","Button","color","float","icon","room_enroll","marginTop","fluid","EmailConfirmationSent","params","useParams","maxWidth","email","EmailConfirm","setStatus","useEffect","Accept","JSON","stringify","as","Link","NotFound","size","goBack","LoadingScreen","PasswordReset","promiseInProgress","usePromiseTracker","setVariant","form","useRef","Form","ref","onSubmit","e","preventDefault","current","trackPromise","document","getElementById","reset","required","type","placeholder","onChange","AuthenticationContext","AuthenticationContextProvider","isAuthenticated","setIsAuthenticated","currentAuth","handleLogOut","clear","window","location","replace","handleAuthentication","Profile","user","setUser","userStatus","0","1","2","userData","universityData","university","find","department","departmentData","username","Row","Col","md","sm","Control","readOnly","reg_no","PasswordChange","DeleteItemModal","actionButtonSize","room_pk","item_pk","updateItemFlag","UpdateItemModal","firstErrorKey","firstError","toUpperCase","defaultValue","date","time","attachment","target","rel","href","pop","htmlFor","autoFocus","content","useStyles","makeStyles","theme","root","width","AddComment","classes","updateFlag","TextField","label","Counter","count","setCount","comment_pk","vote","wordBreak","CommentAttachmentModal","comment","Comment","setEdit","handleEdit","Moment","comment_datetime","format","componentDecorator","text","fontSize","Comments","comments","setComments","Math","random","flag","setFlag","CreateItemModal","section_pk","Date","toLocaleDateString","toLocaleTimeString","hour","minute","Items","items","setItems","post_datetime","AntTab","withStyles","minWidth","Tab","disableRipple","CreateSectionModal","DeleteSectionModal","UpdateSectionModal","title","TabPanel","index","other","role","hidden","aria-labelledby","Box","p","Sections","setValue","sections","setSections","AppBar","position","Tabs","textColor","scrollButtons","event","newValue","indicatorColor","section","textTransform","RoomMembers","owner","class_representatives","teachers","students","members","setMembers","isCR","setIsCR","pendingUsers","setPendingUsers","handleRemoveMember","userstatus","teacher","class_representative","student","handleAddMember","pendingUser","pending_request_pk","loadAddMemberData","handleAddPendingUser","user_status","handleRemovePendingUser","RoomMembersModal","actionButtonWidth","UpdateRoomModal","group","Rooms","room","setRoom","course_title","course_details","SignIn","handle_change_signin","prevstate","newState","handle_signin","obj","password","post","pk","errors","console","log","Group","controlId","SignUp","handle_signup","password1","password2","toggleForm","handle_change_uni","handle_change_dept","varsity","rest","staticContext","departmentlist","varsitylist","Notifications","notifications","setNotifications","notification","NavDropdown","Item","Navs","React","signInShow","setSignInShow","signUpShow","setSignUpShow","Navbar","bg","Brand","src","height","alt","Nav","NavLink","alignRight","eventKey","Dept","invalid","rooms_length","dept_name","match","fetchcourses","endpoint","fetch_dept_details","courselists","marginBottom","CardColumns","fab","bottom","spacing","right","formControl","margin","CreateCourse","courses","setCourses","seterrors","tmpcourse","loadCourse","courselist","Fab","backgroundColor","MyRooms","Simulation","simulation","setSimulation","fileName","description","unityContent","UnityContent","setFullscreen","getFullYear","SimulationSubjects","simulationSubjects","setSimulationSubjects","simulationSubject","Img","charAt","slice","Text","BiologySimulations","simulations","setSimulations","PhysicsSimulations","ChemistrySimulations","SignInPage","PassworResetConfirm","new_password1","new_password2","uid","token","Us","emoji","library","add","far","fas","App","basename","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d6da806c.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport './Header.scss';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <Container className=\"header__text\">\r\n                    <h1 className=\"header__heading\">Online Learning<br></br>Supporter</h1>\r\n                    <p className=\"header__intro\">All Your Online Learning Essentials at One Place</p>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const SettingsContext = createContext();\r\n\r\nconst SettingsContextProvider = (props) => {\r\n    const [isAnimated, setIsAnimated] = useState(false);\r\n\r\n    const changeIsAnimated = () => setIsAnimated(!isAnimated);\r\n\r\n    return (\r\n        <SettingsContext.Provider\r\n            value={{ isAnimated, changeIsAnimated }}\r\n        >\r\n            {props.children}\r\n        </SettingsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default SettingsContextProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\n\r\nconst CustomModal = (props) => {\r\n    const { isAnimated } = useContext(SettingsContext);\r\n    const [show, setShow] = useState(props.show ? props.show : false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        props.handleCloseAction && props.handleCloseAction();\r\n    };\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleAction = () => {\r\n        props.redirect && props.history.push(props.redirect);\r\n        handleClose();\r\n        props.handleAction();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!props.noAction && (\r\n                <button\r\n                    onClick={handleShow}\r\n                    disabled={props.edit}\r\n                    style={props.actionButtonStyle}\r\n                    className={props.actionButtonClass}\r\n                >\r\n                    {props.children}\r\n                </button>\r\n            )}\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n                className=\"text-center\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>{props.modalBody}</Modal.Body>\r\n\r\n                {!props.noAction ? (\r\n                    <Modal.Footer className=\"d-flex justify-content-between\">\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n\r\n                        <Button\r\n                            variant={props.actionVariant}\r\n                            onClick={handleAction}\r\n                        >\r\n                            {props.modalTitle}\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                ) : (\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                )}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(CustomModal);\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst CustomAlert = (props) => {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <Alert\r\n                variant={props.variant ? props.variant : \"danger\"}\r\n                className={props.alertClass ? `${props.alertClass}` : \"\"}\r\n            >\r\n                {props.status}\r\n            </Alert>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomAlert;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Home.scss\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Header from \"../Header/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomModal from \"../generic/CustomModal\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dept: [],\r\n            rooms: {},\r\n            dept_id: null,\r\n            promise: false,\r\n            dept_size: null,\r\n            variant: \"danger\",\r\n            status: undefined,\r\n            pending_rooms_id: [],\r\n            enrolled_rooms_id: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let endpoint = \"/api/v1/university/departments/list/\";\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const fetchdept = async () => {\r\n            await axios\r\n                .get(endpoint, config)\r\n                .then((response) => {\r\n                    let tmparray = [];\r\n\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        tmparray.push(response.data[i]);\r\n                    }\r\n                    this.setState({\r\n                        dept: tmparray,\r\n                        dept_size: response.data.length,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    // this.setState({ status: err });\r\n                });\r\n        };\r\n        await fetchdept();\r\n\r\n        const fetchrooms = async () => {\r\n            for (let i = 0; i < this.state.dept.length; i++) {\r\n                let endpoint1 = `/api/v1/rooms/${this.state.dept[i].id}/list/`;\r\n                let current_dept_id = this.state.dept[i].id;\r\n                await axios\r\n                    .get(endpoint1, config)\r\n                    .then((response) => {\r\n                        let tmparray = [];\r\n                        for (let j = 0; j < response.data.length; j++) {\r\n                            tmparray.push(response.data[j]);\r\n                        }\r\n                        this.setState({\r\n                            rooms: {\r\n                                ...this.state.rooms,\r\n                                [current_dept_id]: tmparray,\r\n                            },\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                        // this.setState({ status: err });\r\n                    });\r\n            }\r\n        };\r\n\r\n        await fetchrooms();\r\n\r\n        const fetchuserrooms = async () => {\r\n            let endpoint2 = `/api/v1/rooms/user_room_list/`;\r\n            await axios\r\n                .get(endpoint2, config)\r\n                .then((response) => {\r\n                    let tmprooms = [];\r\n\r\n                    for (let k = 0; k < response.data.length; k++) {\r\n                        tmprooms.push(response.data[k].id);\r\n                    }\r\n                    this.setState({\r\n                        enrolled_rooms_id: [\r\n                            ...this.state.enrolled_rooms_id,\r\n                            ...tmprooms,\r\n                        ],\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    // this.setState({ status: err });\r\n                });\r\n        };\r\n\r\n        const fetchUserPendingRooms = async () => {\r\n            const API_URL = \"/api/v1/rooms/user_pending_request_room_list/\";\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            let tmp = [];\r\n\r\n            for (let i = 0; i < data.length; i++) tmp.push(data[i].id);\r\n\r\n            this.setState({\r\n                pending_rooms_id: tmp,\r\n            });\r\n\r\n            // if (!response.ok) this.setState({ status: data.detail });\r\n        };\r\n\r\n        if (localStorage.getItem(\"isAuthenticated\")) {\r\n            await fetchuserrooms();\r\n            fetchUserPendingRooms();\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const fetch_dept_name = async () => {\r\n            let endpoint3 = `/api/v1/university/departments/details/${localStorage.getItem(\r\n                \"dept_id\"\r\n            )}/`;\r\n            await axios\r\n                .get(endpoint3, config)\r\n                .then((response) => {\r\n                    localStorage.setItem(\"dept_name\", response.data[0].name);\r\n                })\r\n                .catch((err) => {\r\n                    // this.setState({ status: err });\r\n                });\r\n        };\r\n\r\n        if (localStorage.getItem(\"isAuthenticated\")) {\r\n            await fetch_dept_name();\r\n        }\r\n    }\r\n\r\n    room_enroll(room_id, isPending) {\r\n        const loadData = async () => {\r\n            const API_URL = `/api/v1/rooms/pending_requests/${room_id}/create/`;\r\n\r\n            const formData = new FormData();\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (!response.ok) this.setState({ status: data.detail });\r\n        };\r\n\r\n        loadData();\r\n\r\n        if (!isPending) {\r\n            this.setState({\r\n                variant: \"success\",\r\n                status: \"A request has been sent to join the room\",\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const settings = {\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 3,\r\n            slidesToScroll: 1,\r\n            dots: true,\r\n            responsive: [\r\n                {\r\n                    breakpoint: 1024,\r\n                    settings: {\r\n                        slidesToShow: 3,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                        dots: true,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 1000,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        infinite: true,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 800,\r\n                    settings: {\r\n                        slidesToShow: 2,\r\n                        slidesToScroll: 1,\r\n                        arrows: false,\r\n                        infinite: true,\r\n                        dots: true,\r\n                    },\r\n                },\r\n                {\r\n                    breakpoint: 600,\r\n                    settings: {\r\n                        slidesToShow: 1,\r\n                        slidesToScroll: 1,\r\n                        arrows: false,\r\n                        infinite: true,\r\n                        dots: true,\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n\r\n        let deptcoursel;\r\n\r\n        if (Object.keys(this.state.dept).length > 0) {\r\n            deptcoursel = this.state.dept.map((iitem) => (\r\n                <div key={iitem.id}>\r\n                    {this.state.rooms[iitem.id] && (\r\n                        <div>\r\n                            <h3 className=\"dept__name\">\r\n                                {iitem.name} (\r\n                                {this.state.rooms[iitem.id].length < 3\r\n                                    ? (settings.slidesToShow = this.state.rooms[\r\n                                          iitem.id\r\n                                      ].length)\r\n                                    : (settings.slidesToShow = 3)}\r\n                                )\r\n                            </h3>\r\n\r\n                            <style>{cssstyle}</style>\r\n\r\n                            <Slider {...settings}>\r\n                                {this.state.rooms[iitem.id] &&\r\n                                    this.state.rooms[iitem.id].map((item) => (\r\n                                        <div key={item.id}>\r\n                                            <Card\r\n                                                border=\"main\"\r\n                                                className=\"course\"\r\n                                            >\r\n                                                <Card.Body>\r\n                                                    <Card.Title className=\"course__name\">\r\n                                                        {\r\n                                                            item.course.split(\r\n                                                                \",\"\r\n                                                            )[0]\r\n                                                        }{\" \"}\r\n                                                        ({item.year})\r\n                                                    </Card.Title>\r\n                                                    <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                                        {\r\n                                                            item.course.split(\r\n                                                                \",\"\r\n                                                            )[1]\r\n                                                        }\r\n                                                    </Card.Subtitle>\r\n                                                    {this.state.enrolled_rooms_id.includes(\r\n                                                        item.id\r\n                                                    ) &&\r\n                                                    localStorage.getItem(\r\n                                                        \"isAuthenticated\"\r\n                                                    ) ? (\r\n                                                        <div>\r\n                                                            <Link\r\n                                                                to={`rooms/${item.id}`}\r\n                                                            >\r\n                                                                <Button\r\n                                                                    variant=\"outlined\"\r\n                                                                    color=\"primary\"\r\n                                                                    style={{\r\n                                                                        float:\r\n                                                                            \"right\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon\r\n                                                                        icon={[\r\n                                                                            \"fas\",\r\n                                                                            \"sign-in-alt\",\r\n                                                                        ]}\r\n                                                                        className=\"mr-2\"\r\n                                                                    />\r\n                                                                    Enter\r\n                                                                </Button>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    ) : (\r\n                                                        localStorage.getItem(\r\n                                                            \"isAuthenticated\"\r\n                                                        ) && (\r\n                                                            <Button\r\n                                                                variant=\"outlined\"\r\n                                                                color=\"primary\"\r\n                                                                style={{\r\n                                                                    float:\r\n                                                                        \"right\",\r\n                                                                }}\r\n                                                                onClick={() =>\r\n                                                                    this.room_enroll(\r\n                                                                        item.id,\r\n                                                                        this.state.pending_rooms_id.includes(\r\n                                                                            item.id\r\n                                                                        )\r\n                                                                    )\r\n                                                                }\r\n                                                            >\r\n                                                                {this.state.pending_rooms_id.includes(\r\n                                                                    item.id\r\n                                                                ) ? (\r\n                                                                    <>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={[\r\n                                                                                \"fas\",\r\n                                                                                \"spinner\",\r\n                                                                            ]}\r\n                                                                            className=\"mr-2\"\r\n                                                                        />\r\n                                                                        Pending...\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                    <>\r\n                                                                        <FontAwesomeIcon\r\n                                                                            icon={[\r\n                                                                                \"fas\",\r\n                                                                                \"paper-plane\",\r\n                                                                            ]}\r\n                                                                            className=\"mr-2\"\r\n                                                                        />\r\n                                                                        Enroll\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </Button>\r\n                                                        )\r\n                                                    )}\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </div>\r\n                                    ))}\r\n                            </Slider>\r\n\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    style={{ marginTop: \"40px\" }}\r\n                                >\r\n                                    <Link to={`/homerooms/${iitem.id}`}>\r\n                                        Show All\r\n                                    </Link>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        const handleCloseAction = () => {\r\n            this.setState({\r\n                status: undefined,\r\n            });\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                {this.state.rooms && Object.keys(this.state.rooms).length > 0 && (\r\n                    <div>\r\n                        <Header />\r\n                        <h2 className=\"pageIntro\">All Availabe Rooms</h2>\r\n\r\n                        {this.state.status && (\r\n                            <CustomModal\r\n                                show={true}\r\n                                noAction={true}\r\n                                modalTitle=\"Error\"\r\n                                handleCloseAction={handleCloseAction}\r\n                                modalBody={\r\n                                    <CustomAlert\r\n                                        status={this.state.status}\r\n                                        variant={this.state.variant}\r\n                                    />\r\n                                }\r\n                            />\r\n                        )}\r\n\r\n                        <Container className=\"dept\" fluid>\r\n                            {deptcoursel}\r\n                        </Container>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst cssstyle = `\r\n.slick-next:before, .slick-prev:before {\r\n    color: #D6D6D6;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Card } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CustomAlert from \"./CustomAlert\";\r\n\r\nconst EmailConfirmationSent = () => {\r\n    const params = useParams();\r\n\r\n    return (\r\n        <Container className=\"vertical-center\">\r\n            <Card\r\n                className=\"p-3 p-sm-4 border-main text-center\"\r\n                style={{ maxWidth: \"28rem\" }}\r\n            >\r\n                <h5>Verify Your E-mail Address</h5>\r\n\r\n                <p className=\"my-3\">\r\n                    We have sent an e-mail to you for verification. Follow the\r\n                    link provided to finalize the signup process. Please contact\r\n                    us if you do not receive it within a few minutes.\r\n                </p>\r\n\r\n                <CustomAlert\r\n                    variant=\"success\"\r\n                    alertClass=\"text-break\"\r\n                    status={`Confirmation e-mail sent to ${params.email}`}\r\n                />\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EmailConfirmationSent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Card, Button } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport CustomAlert from \"./CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst EmailConfirm = () => {\r\n    const [status, setStatus] = useState(undefined);\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const API_URL = \"/api/v1/accounts/account-confirm-email/\";\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    key: params.key,\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            setStatus(data.detail);\r\n        };\r\n\r\n        loadData();\r\n    }, [params]);\r\n\r\n    return (\r\n        <Container className=\"d-flex align-items-center justify-content-center\">\r\n            <Card\r\n                className=\"p-3 text-center border-main\"\r\n                style={{ maxWidth: \"28rem\" }}\r\n            >\r\n                <CustomAlert\r\n                    variant=\"info\"\r\n                    status={\r\n                        status === \"ok\"\r\n                            ? \"You have successfully verified your email address.\"\r\n                            : \"Sorry, try again.\"\r\n                    }\r\n                />\r\n\r\n                {status === \"ok\" ? (\r\n                    <Button variant=\"main\" as={Link} to=\"/login\">\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fas\", \"sign-in-alt\"]}\r\n                        />\r\n                        SignIn\r\n                    </Button>\r\n                ) : (\r\n                    <Button variant=\"main\" as={Link} to=\"/\">\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fas\", \"home\"]}\r\n                        />\r\n                        Go to HomePage\r\n                    </Button>\r\n                )}\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EmailConfirm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Card, Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst NotFound = (props) => (\r\n    <Container className=\"vertical-center text-center\">\r\n        <Card className=\"border-main\">\r\n            <Card.Body style={{ maxWidth: \"30rem\" }}>\r\n                <h2 className=\"my-3\">Oops! This Page Could Not Be Found.</h2>\r\n                <span className=\"text-danger\">Error Code: 404</span>\r\n                <p>\r\n                    The page you are looking for does not exist, have been\r\n                    removed, name changed or is temporarily unavailable.\r\n                </p>\r\n\r\n                <div className=\"d-md-flex justify-content-between\">\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"main\"\r\n                        className=\"mt-3\"\r\n                        as={Link}\r\n                        to=\"/\"\r\n                    >\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fa\", \"home\"]}\r\n                        />\r\n                        Go To Homepage\r\n                    </Button>\r\n                    <Button\r\n                        size=\"sm\"\r\n                        variant=\"main\"\r\n                        className=\"mt-3 ml-2\"\r\n                        onClick={() => props.history.goBack()}\r\n                    >\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fa\", \"chevron-left\"]}\r\n                        />\r\n                        Go Back\r\n                    </Button>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    </Container>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport '../../styles/componentStyles/LoadingScreen.scss';\r\n\r\nconst LoadingScreen = () => {\r\n    return <div className=\"spin\"></div>;\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Container, Card, Button } from \"react-bootstrap\";\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\nimport CustomAlert from \"./CustomAlert\";\r\n\r\nconst PasswordReset = (props) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    const [status, setStatus] = useState(undefined);\r\n    const [variant, setVariant] = useState(\"danger\");\r\n    const form = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = \"/api/v1/accounts/password/reset/\";\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            try {\r\n                const response = await fetch(API_URL, {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) setVariant(\"success\");\r\n\r\n                setStatus(data[Object.keys(data)[0]]);\r\n            } catch (error) {\r\n                setStatus(error);\r\n            }\r\n        };\r\n\r\n        trackPromise(loadData());\r\n        document.getElementById(\"password-reset-form\").reset();\r\n    };\r\n\r\n    return (\r\n        <Container className=\"vertical-center\">\r\n            {promiseInProgress ? (\r\n                <LoadingScreen />\r\n            ) : status ? (\r\n                <CustomAlert status={status} variant={variant} />\r\n            ) : (\r\n                <Card className=\"col border-main\" style={{ maxWidth: \"28rem\" }}>\r\n                    <Card.Body className=\"p-3 p-sm-4 text-center\">\r\n                        <Form\r\n                            id=\"password-reset-form\"\r\n                            ref={form}\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <h5 className=\"card-title mb-4\">Reset Password</h5>\r\n\r\n                            <div className=\"my-3 d-flex\">\r\n                                <span className=\"ccard__input-prepend\">\r\n                                    <FontAwesomeIcon\r\n                                        className=\"fa-icon\"\r\n                                        icon={[\"fas\", \"envelope\"]}\r\n                                    />\r\n                                </span>\r\n\r\n                                <input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Account Email...\"\r\n                                    className=\"ccard__input pl-2\"\r\n                                    onChange={() => setStatus(\"\")}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"mt-4 d-flex justify-content-between\">\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    type=\"submit\"\r\n                                    variant=\"main\"\r\n                                    className=\"mr-2\"\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fa\", \"paper-plane\"]}\r\n                                    />\r\n                                    Send Email\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline-main\"\r\n                                    onClick={() => props.history.goBack()}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fa\", \"chevron-left\"]}\r\n                                    />\r\n                                    Go Back\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PasswordReset;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const AuthenticationContext = createContext();\r\n\r\nconst AuthenticationContextProvider = (props) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const currentAuth = localStorage.getItem(\"isAuthenticated\");\r\n\r\n        if (currentAuth !== isAuthenticated) setIsAuthenticated(currentAuth);\r\n    }, [isAuthenticated]);\r\n\r\n    const handleAuthentication = (isAuthenticated) => {\r\n        setIsAuthenticated(isAuthenticated);\r\n        localStorage.setItem(\"isAuthenticated\", isAuthenticated);\r\n    };\r\n\r\n    const handleLogOut = async () => {\r\n        const API_URL = \"/api/v1/accounts/logout/\";\r\n\r\n        const response = await fetch(API_URL, {\r\n            method: \"POST\",\r\n        });\r\n\r\n        if (response.ok) {\r\n            localStorage.clear();\r\n            window.location.replace(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthenticationContext.Provider\r\n            value={{ isAuthenticated, handleAuthentication, handleLogOut }}\r\n        >\r\n            {props.children}\r\n        </AuthenticationContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthenticationContextProvider;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Container, Card, Row } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Profile = () => {\r\n    const [user, setUser] = useState({});\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const { handleLogOut } = useContext(AuthenticationContext);\r\n\r\n    useEffect(() => {\r\n        const userStatus = {\r\n            0: \"Admin\",\r\n            1: \"Teacher\",\r\n            2: \"Student\",\r\n        };\r\n\r\n        const loadData = async () => {\r\n            //\r\n            // Getting User Details\r\n            //\r\n            let API_URL = \"/api/v1/accounts/user/\";\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n            if (response.status === 401) handleLogOut();\r\n\r\n            const userData = await response.json();\r\n            if (!response.ok) setStatus(userData.detail);\r\n\r\n            //\r\n            // Getting University Details\r\n            //\r\n            API_URL = \"/api/v1/university/details/\";\r\n            response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            const universityData = await response.json();\r\n            if (!response.ok) setStatus(universityData.detail);\r\n            const university = universityData.find(\r\n                (university) => university.id === userData.university\r\n            ).name;\r\n\r\n            //\r\n            // Getting Department Details\r\n            //\r\n            API_URL = `/api/v1/university/departments/details/${userData.department}/`;\r\n            response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            const departmentData = await response.json();\r\n            if (!response.ok) setStatus(departmentData.detail);\r\n            else\r\n                setUser({\r\n                    ...userData,\r\n                    university,\r\n                    department: departmentData[0].name,\r\n                    status: userStatus[userData.status],\r\n                });\r\n        };\r\n\r\n        loadData();\r\n    }, [handleLogOut]);\r\n\r\n    return (\r\n        <Container className=\"vertical-center\">\r\n            {status ? (\r\n                <CustomAlert status={status} />\r\n            ) : (\r\n                <Card className=\"border-main col-md-7\">\r\n                    <Card.Body>\r\n                        <h3 className=\"text-main\">\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"user\"]}\r\n                            />\r\n                            {user.username}\r\n                            <small className=\"text-muted ml-2\">\r\n                                ({user.status})\r\n                            </small>\r\n                        </h3>\r\n\r\n                        <br />\r\n                        <h3>Account</h3>\r\n                        <hr />\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"mt-2\">\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fas\", \"university\"]}\r\n                                    />\r\n                                    University:\r\n                                </h6>\r\n                            </Col>\r\n                            <Col md={6} sm={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder={user.university}\r\n                                    readOnly\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"mt-2\">\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fas\", \"building\"]}\r\n                                    />\r\n                                    Department:\r\n                                </h6>\r\n                            </Col>\r\n                            <Col md={6} sm={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder={user.department}\r\n                                    readOnly\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        {user.status !== \"Teacher\" ? (\r\n                            <>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h6 className=\"mt-2\">\r\n                                            <FontAwesomeIcon\r\n                                                className=\"mr-2\"\r\n                                                icon={[\"fas\", \"id-card\"]}\r\n                                            />\r\n                                            Reg. No:\r\n                                        </h6>\r\n                                    </Col>\r\n                                    <Col md={6} sm={12}>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder={user.reg_no}\r\n                                            readOnly\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <br />\r\n                            </>\r\n                        ) : null}\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"mt-2\">\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fas\", \"envelope\"]}\r\n                                    />\r\n                                    Email:\r\n                                </h6>\r\n                            </Col>\r\n                            <Col md={6} sm={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder={user.email}\r\n                                    readOnly\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <br />\r\n                        <Link to=\"/password/change/\">\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"key\"]}\r\n                            />\r\n                            Change Password\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form, Container, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CustomAlert from \"./CustomAlert\";\r\n// import { AuthenticationContext } from \"../contexts/AuthenticationContext\";\r\n\r\nconst PasswordChange = (props) => {\r\n    const [status, setStatus] = useState(undefined);\r\n    const [variant, setVariant] = useState(\"danger\");\r\n    const form = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = \"/api/v1/accounts/password/change/\";\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            try {\r\n                const response = await fetch(API_URL, {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) setVariant(\"success\");\r\n\r\n                setStatus(data[Object.keys(data)[0]]);\r\n            } catch (error) {\r\n                setStatus(error);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        document.getElementById(\"password-change-form\").reset();\r\n    };\r\n\r\n    return (\r\n        <Container className=\"vertical-center\">\r\n            <Card className=\"col border-main\" style={{ maxWidth: \"28rem\" }}>\r\n                <Card.Body className=\"text-center\">\r\n                    <h5 className=\"mb-4\">Change Password</h5>\r\n\r\n                    <Form\r\n                        ref={form}\r\n                        onSubmit={handleSubmit}\r\n                        id=\"password-change-form\"\r\n                    >\r\n                        <div className=\"mx-auto\">\r\n                            {status && (\r\n                                <CustomAlert\r\n                                    status={status}\r\n                                    variant={variant}\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"my-3 d-flex\">\r\n                            <span className=\"ccard__input-prepend\">\r\n                                <FontAwesomeIcon\r\n                                    className=\"fa-icon\"\r\n                                    icon={[\"fas\", \"lock\"]}\r\n                                />\r\n                            </span>\r\n\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"old_password\"\r\n                                placeholder=\"Old password\"\r\n                                className=\"ccard__input pl-2\"\r\n                                onChange={() => setStatus(\"\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"my-3 d-flex\">\r\n                            <span className=\"ccard__input-prepend\">\r\n                                <FontAwesomeIcon\r\n                                    className=\"fa-icon\"\r\n                                    icon={[\"fas\", \"lock\"]}\r\n                                />\r\n                            </span>\r\n\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"new_password1\"\r\n                                placeholder=\"New password\"\r\n                                className=\"ccard__input pl-2\"\r\n                                onChange={() => setStatus(\"\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"my-3 d-flex\">\r\n                            <span className=\"ccard__input-prepend\">\r\n                                <FontAwesomeIcon\r\n                                    className=\"fa-icon\"\r\n                                    icon={[\"fas\", \"lock\"]}\r\n                                />\r\n                            </span>\r\n\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"new_password2\"\r\n                                placeholder=\"Repeat password\"\r\n                                className=\"ccard__input pl-2\"\r\n                                onChange={() => setStatus(\"\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"d-md-flex justify-content-between mt-4\">\r\n                            <Button\r\n                                size=\"sm\"\r\n                                type=\"submit\"\r\n                                variant=\"main\"\r\n                                className=\"mb-2 mr-sm-2\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"key\"]}\r\n                                />\r\n                                Change Password\r\n                            </Button>\r\n\r\n                            <Button\r\n                                size=\"sm\"\r\n                                variant=\"outline-main\"\r\n                                className=\"mb-2\"\r\n                                onClick={() => props.history.goBack()}\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"chevron-left\"]}\r\n                                />\r\n                                Go Back\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PasswordChange;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../../../generic/CustomAlert\";\r\n\r\nconst DeleteItemModal = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleAction = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/items/${props.room_pk}/delete/${props.item_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateItemFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={handleShow}\r\n                style={{ color: \"#f44336\" }}\r\n                size={props.actionButtonSize}\r\n                className={props.actionButtonClass}\r\n            >\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n                className=\"text-center\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {status && <CustomAlert variant=\"danger\" status={status} />}\r\n\r\n                    {props.modalBody}\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer className=\"d-flex justify-content-between\">\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant={props.actionVariant}\r\n                        onClick={handleAction}\r\n                    >\r\n                        {props.modalTitle}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeleteItemModal;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../../../generic/CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst UpdateItemModal = (props) => {\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleUpdateItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/items/${props.room_pk}/update/${props.item_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const firstErrorKey = Object.keys(data)[0];\r\n                const firstError =\r\n                    firstErrorKey.toUpperCase() + \": \" + data[firstErrorKey];\r\n                setStatus(firstError);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateItemFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={handleShow}\r\n                style={{ color: \"#ef6c00\" }}\r\n                size={props.actionButtonSize}\r\n                className={props.actionButtonClass}\r\n            >\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Header closeButton>Update this Item</Modal.Header>\r\n                <Modal.Body>\r\n                    <form ref={form} onSubmit={handleUpdateItem}>\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Date</label>\r\n\r\n                                <input\r\n                                    required\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"12/21/2020\"\r\n                                    defaultValue={props.item.date}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Time</label>\r\n\r\n                                <input\r\n                                    required\r\n                                    type=\"time\"\r\n                                    name=\"time\"\r\n                                    placeholder=\"23:58\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={props.item.time}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {props.item.attachment && (\r\n                            <div className=\"form-group\">\r\n                                Currently:{\" \"}\r\n                                <a\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                    href={props.item.attachment}\r\n                                >\r\n                                    {props.item.attachment.split(\"/\").pop()}\r\n                                </a>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                {props.item.attachment ? (\r\n                                    <label\r\n                                        htmlFor=\"attachment\"\r\n                                        className=\"col-6 my-auto\"\r\n                                    >\r\n                                        Change{\" \"}\r\n                                        <span className=\"text-muted\">\r\n                                            (Optional):\r\n                                        </span>\r\n                                    </label>\r\n                                ) : (\r\n                                    <label\r\n                                        htmlFor=\"attachment\"\r\n                                        className=\"col-6 my-auto\"\r\n                                    >\r\n                                        Attachment{\" \"}\r\n                                        <span className=\"text-muted\">\r\n                                            (Optional):\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"attachment\"\r\n                                    name=\"attachment\"\r\n                                    className=\"col-6 form-control-file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Content</label>\r\n\r\n                            <textarea\r\n                                required\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                placeholder=\"Content\"\r\n                                className=\"form-control\"\r\n                                defaultValue={props.item.content}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <button\r\n                                onClick={handleClose}\r\n                                className=\"btn btn-outline-danger\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"times\"]}\r\n                                />\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-main\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"wrench\"]}\r\n                                />\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateItemModal;\r\n","import React, { useState, useRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CustomAlert from \"../../../../generic/CustomAlert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& > *\": {\r\n            width: \"100%\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst AddComment = (props) => {\r\n    const form = useRef(null);\r\n    const classes = useStyles();\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/${props.item_pk}/create/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            let response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n        document.getElementById(\"add-comment-form1\").reset();\r\n    };\r\n\r\n    return (\r\n        <form\r\n            ref={form}\r\n            id=\"add-comment-form1\"\r\n            onSubmit={handleSubmit}\r\n            className={classes.root + \" my-3\"}\r\n        >\r\n            {status && <CustomAlert variant=\"warning\" status={status} />}\r\n\r\n            <TextField\r\n                size=\"small\"\r\n                name=\"content\"\r\n                variant=\"outlined\"\r\n                label=\"Add Comment\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddComment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Counter = (props) => {\r\n    const [count, setCount] = useState(props.count);\r\n\r\n    const upCount = () => setCount(count + 1);\r\n    const downCount = () => setCount(count - 1);\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/update/${props.comment_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    vote: count,\r\n                }),\r\n            });\r\n        };\r\n\r\n        loadData();\r\n    }, [count, props]);\r\n\r\n    return (\r\n        <div style={{ wordBreak: \"normal\" }} className=\"mr-2 mt-1\">\r\n            <div className=\"text-center d-flex flex-column\">\r\n                <button onClick={upCount} className=\"btn__none\">\r\n                    <FontAwesomeIcon\r\n                        className=\"fa-icon\"\r\n                        icon={[\"fas\", \"chevron-up\"]}\r\n                    />\r\n                </button>\r\n\r\n                {count}\r\n\r\n                <button onClick={downCount} className=\"btn__none\">\r\n                    <FontAwesomeIcon\r\n                        className=\"fa-icon\"\r\n                        icon={[\"fas\", \"chevron-down\"]}\r\n                    />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n","import { Button, Modal } from \"react-bootstrap\";\nimport React, { useContext, useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SettingsContext } from \"../../../../../contexts/SettingsContext\";\nimport CustomAlert from \"../../../../generic/CustomAlert\";\n\nconst CommentAttachmentModal = (props) => {\n    const form = useRef(null);\n    const [show, setShow] = useState(false);\n    const [status, setStatus] = useState(undefined);\n    const { isAnimated } = useContext(SettingsContext);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/update/${props.comment.id}/`;\n\n        const loadData = async () => {\n            const formData = new FormData(form.current);\n\n            const response = await fetch(API_URL, {\n                method: \"PATCH\",\n                body: formData,\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) setStatus(data.detail);\n            else handleClose();\n        };\n\n        loadData();\n        props.updateFlag();\n    };\n\n    return (\n        <>\n            <button onClick={handleShow} className={props.actionButtonClass}>\n                {props.children}\n            </button>\n\n            <Modal\n                centered\n                show={show}\n                onHide={handleClose}\n                animation={isAnimated}\n            >\n                <Modal.Header closeButton>Add an attachment</Modal.Header>\n                <Modal.Body>\n                    <form ref={form} onSubmit={handleSubmit}>\n                        {status && (\n                            <CustomAlert variant=\"warning\" status={status} />\n                        )}\n\n                        <div className=\"form-group\">\n                            <div className=\"row\">\n                                {props.comment.attachment ? (\n                                    <label\n                                        htmlFor=\"attachment\"\n                                        className=\"col-6 my-auto\"\n                                    >\n                                        Change{\" \"}\n                                        <span className=\"text-muted\">\n                                            (Optional):\n                                        </span>\n                                    </label>\n                                ) : (\n                                    <label\n                                        htmlFor=\"attachment\"\n                                        className=\"col-6 my-auto\"\n                                    >\n                                        Attachment{\" \"}\n                                        <span className=\"text-muted\">\n                                            (Optional):\n                                        </span>\n                                    </label>\n                                )}\n\n                                <input\n                                    type=\"file\"\n                                    id=\"attachment\"\n                                    name=\"attachment\"\n                                    className=\"col-6 form-control-file\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"d-flex justify-content-between\">\n                            <Button\n                                size=\"sm\"\n                                onClick={handleClose}\n                                variant=\"outline-danger\"\n                            >\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"times\"]}\n                                />\n                                Cancel\n                            </Button>\n\n                            <Button size=\"sm\" type=\"submit\">\n                                <FontAwesomeIcon\n                                    className=\"mr-2\"\n                                    icon={[\"fas\", \"plus\"]}\n                                />\n                                {props.comment.attachment ? \"Update\" : \"Add\"}{\" \"}\n                                attachment\n                            </Button>\n                        </div>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default CommentAttachmentModal;\n","import Moment from \"moment\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport CustomAlert from \"../../../../generic/CustomAlert\";\r\nimport CustomModal from \"../../../../generic/CustomModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Counter from \"../../../../generic/Counter\";\r\nimport Linkify from \"react-linkify\";\r\nimport CommentAttachmentModal from \"./CommentAttachmentModal\";\r\n\r\nconst Comment = (props) => {\r\n    const form = useRef(null);\r\n    const [edit, setEdit] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    const handleEdit = (e) => {\r\n        // e.preventDefault();\r\n        setEdit(!edit);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/update/${props.comment_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n        };\r\n\r\n        loadData();\r\n        handleEdit();\r\n        props.updateFlag();\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/delete/${props.comment_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n    };\r\n\r\n    const componentDecorator = (href, text, key) => (\r\n        <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    );\r\n\r\n    const handleCloseAction = () => setStatus(undefined);\r\n\r\n    return (\r\n        <div>\r\n            {status && (\r\n                <CustomModal\r\n                    show={true}\r\n                    noAction={true}\r\n                    modalTitle=\"Error\"\r\n                    handleCloseAction={handleCloseAction}\r\n                    modalBody={\r\n                        <CustomAlert variant=\"warning\" status={status} />\r\n                    }\r\n                />\r\n            )}\r\n\r\n            <div className=\"d-flex\">\r\n                <Counter\r\n                    room_pk={props.room_pk}\r\n                    count={props.comment.vote}\r\n                    comment_pk={props.comment_pk}\r\n                />\r\n\r\n                <div>\r\n                    <div className=\"text-left border-bottom\">\r\n                        <small>{props.comment.user}</small>\r\n\r\n                        <br />\r\n\r\n                        <small>\r\n                            {Moment(props.comment.comment_datetime).format(\r\n                                \"LLLL\"\r\n                            )}\r\n                        </small>\r\n\r\n                        <div className=\"my-1\">\r\n                            <button\r\n                                onClick={handleEdit}\r\n                                className=\"btn-link btn__none\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"edit\"]}\r\n                                />\r\n                            </button>\r\n\r\n                            <CustomModal\r\n                                modalTitle=\"Delete\"\r\n                                actionVariant=\"danger\"\r\n                                handleAction={handleDelete}\r\n                                actionButtonClass=\"btn__none\"\r\n                                actionButtonStyle={{ color: \"#f44336\" }}\r\n                                modalBody={`Do you really want to delete this comment?`}\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"trash-alt\"]}\r\n                                />\r\n                            </CustomModal>\r\n\r\n                            <CommentAttachmentModal\r\n                                room_pk={props.room_pk}\r\n                                comment={props.comment}\r\n                                updateFlag={props.updateFlag}\r\n                                actionButtonClass=\"btn-link btn__none text-secondary\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"paperclip\"]}\r\n                                />\r\n                            </CommentAttachmentModal>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {edit ? (\r\n                        <form\r\n                            ref={form}\r\n                            className=\"mt-2\"\r\n                            onSubmit={handleSubmit}\r\n                        >\r\n                            <div className=\"form-group\">\r\n                                <textarea\r\n                                    required\r\n                                    autoFocus\r\n                                    type=\"text\"\r\n                                    name=\"content\"\r\n                                    placeholder=\"Content\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={props.comment.content}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <button\r\n                                    onClick={handleEdit}\r\n                                    style={{ color: \"red\" }}\r\n                                    className=\"btn-link btn__none\"\r\n                                >\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn-link btn__none\"\r\n                                >\r\n                                    Update\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    ) : (\r\n                        <div className=\"mt-2\">\r\n                            <Linkify componentDecorator={componentDecorator}>\r\n                                {props.comment.content}\r\n                            </Linkify>\r\n\r\n                            {props.comment.attachment && (\r\n                                <>\r\n                                    <br /> <br />\r\n                                    <div style={{ fontSize: \"0.85rem\" }}>\r\n                                        <span className=\"font-weight-bold\">\r\n                                            Attachment:{\" \"}\r\n                                        </span>\r\n                                        <a\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href={props.comment.attachment}\r\n                                        >\r\n                                            {props.comment.attachment\r\n                                                .split(\"/\")\r\n                                                .pop()}\r\n                                        </a>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CustomAlert from \"../../../../generic/CustomAlert\";\r\nimport DeleteItemModal from \"../DeleteItemModal\";\r\nimport UpdateItemModal from \"../UpdateItemModal\";\r\nimport AddComment from \"./AddComment\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Comments = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [flag, setFlag] = useState(Math.random());\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/rooms/sections/items/comments/${props.room_pk}/${props.item_pk}/list/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else setComments(data);\r\n        };\r\n\r\n        loadData();\r\n    }, [props.room_pk, props.item_pk, flag]);\r\n\r\n    const updateFlag = () => setFlag(Math.random());\r\n\r\n    const handleShow = () => setShow(!show);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-2 d-flex flex-column flex-md-row justify-content-around\">\r\n                <UpdateItemModal\r\n                    item={props.item}\r\n                    modalTitle=\"Update\"\r\n                    actionButtonSize=\"sm\"\r\n                    actionVariant=\"primary\"\r\n                    room_pk={props.room_pk}\r\n                    item_pk={props.item_pk}\r\n                    actionButtonClass=\"btn__none my-1\"\r\n                    updateItemFlag={props.updateItemFlag}\r\n                >\r\n                    Update this Item\r\n                </UpdateItemModal>\r\n\r\n                <DeleteItemModal\r\n                    modalTitle=\"Delete\"\r\n                    actionButtonSize=\"sm\"\r\n                    actionVariant=\"danger\"\r\n                    room_pk={props.room_pk}\r\n                    item_pk={props.item_pk}\r\n                    actionButtonClass=\"btn__none my-1\"\r\n                    updateItemFlag={props.updateItemFlag}\r\n                    modalBody={`Do you really want to delete this Item?`}\r\n                >\r\n                    Delete this Item\r\n                </DeleteItemModal>\r\n\r\n                {comments.length > 0 && (\r\n                    <button\r\n                        onClick={handleShow}\r\n                        className=\"btn__none my-1\"\r\n                        style={{ color: \"#1e88e5\" }}\r\n                    >\r\n                        {!show ? comments.length : \"Hide\"}{\" \"}\r\n                        {comments.length > 1 ? \"comments\" : \"comment\"}\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"mx-3\">\r\n                {!show && comments[comments.length - 1] && (\r\n                    <div className=\"mb-2\">\r\n                        <Comment\r\n                            comment={comments[comments.length - 1]}\r\n                            room_pk={props.room_pk}\r\n                            comment_pk={comments[comments.length - 1].id}\r\n                            updateFlag={updateFlag}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                {show && (\r\n                    <>\r\n                        {comments.map((comment) => (\r\n                            <div key={comment.id} className=\"mb-2\">\r\n                                <Comment\r\n                                    comment={comment}\r\n                                    room_pk={props.room_pk}\r\n                                    comment_pk={comment.id}\r\n                                    updateFlag={updateFlag}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n\r\n                        {status &&\r\n                            (comments.length === 0 ? (\r\n                                <h5 className=\"text-center text-muted my-4\">\r\n                                    {status}\r\n                                </h5>\r\n                            ) : (\r\n                                <CustomAlert\r\n                                    variant=\"warning\"\r\n                                    status={status}\r\n                                />\r\n                            ))}\r\n                    </>\r\n                )}\r\n\r\n                <AddComment\r\n                    room_pk={props.room_pk}\r\n                    item_pk={props.item_pk}\r\n                    updateFlag={updateFlag}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import { Modal } from \"react-bootstrap\";\r\nimport React, { useContext, useState, useRef } from \"react\";\r\nimport CustomAlert from \"../../../generic/CustomAlert\";\r\nimport { SettingsContext } from \"../../../../contexts/SettingsContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst CreateItemModal = (props) => {\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleAddItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/items/${props.room_pk}/${props.section_pk}/create/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const firstErrorKey = Object.keys(data)[0];\r\n                const firstError =\r\n                    firstErrorKey.toUpperCase() + \": \" + data[firstErrorKey];\r\n                setStatus(firstError);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateItemFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleShow} className={props.actionButtonClass}>\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Header closeButton>Create an Item</Modal.Header>\r\n                <Modal.Body>\r\n                    <form ref={form} onSubmit={handleAddItem}>\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Date</label>\r\n\r\n                                <input\r\n                                    required\r\n                                    type=\"date\"\r\n                                    name=\"date\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"12/21/2020\"\r\n                                    defaultValue={new Date().toLocaleDateString(\r\n                                        \"en-CA\"\r\n                                    )}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Time</label>\r\n\r\n                                <input\r\n                                    required\r\n                                    type=\"time\"\r\n                                    name=\"time\"\r\n                                    placeholder=\"23:58\"\r\n                                    className=\"form-control\"\r\n                                    defaultValue={new Date().toLocaleTimeString(\r\n                                        \"en-GB\",\r\n                                        {\r\n                                            hour: \"2-digit\",\r\n                                            minute: \"2-digit\",\r\n                                        }\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <div className=\"row\">\r\n                                <label\r\n                                    htmlFor=\"attachment\"\r\n                                    className=\"col-6 my-auto\"\r\n                                >\r\n                                    Attachment{\" \"}\r\n                                    <span className=\"text-muted\">\r\n                                        (Optional):\r\n                                    </span>\r\n                                </label>\r\n\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"attachment\"\r\n                                    name=\"attachment\"\r\n                                    className=\"col-6 form-control-file\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Content</label>\r\n\r\n                            <textarea\r\n                                required\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                name=\"content\"\r\n                                placeholder=\"Content\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <button\r\n                                onClick={handleClose}\r\n                                className=\"btn btn-outline-danger\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"times\"]}\r\n                                />\r\n                                Cancel\r\n                            </button>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-main\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"plus\"]}\r\n                                />\r\n                                Create\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateItemModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CustomAlert from \"../../../generic/CustomAlert\";\r\nimport Comments from \"./Comments/Comments\";\r\nimport Moment from \"moment\";\r\nimport CreateItemModal from \"./CreateItemModal\";\r\nimport Linkify from \"react-linkify\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Items = (props) => {\r\n    const [items, setItems] = useState([]);\r\n    const [flag, setFlag] = useState(Math.random());\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/rooms/sections/items/${props.room_pk}/${props.section_pk}/list/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else setItems(data);\r\n        };\r\n\r\n        loadData();\r\n    }, [props.room_pk, props.section_pk, flag]);\r\n\r\n    const componentDecorator = (href, text, key) => (\r\n        <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    );\r\n\r\n    const updateItemFlag = () => setFlag(Math.random());\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text-right\">\r\n                <CreateItemModal\r\n                    room_pk={props.room_pk}\r\n                    section_pk={props.section_pk}\r\n                    updateItemFlag={updateItemFlag}\r\n                    actionButtonClass=\"btn btn-outline-primary btn-sm mt-1 mb-4\"\r\n                >\r\n                    <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"plus\"]} />\r\n                    Create an Item\r\n                </CreateItemModal>\r\n            </div>\r\n\r\n            {items.length ? (\r\n                items.map((item) => (\r\n                    <Card\r\n                        key={item.id}\r\n                        className=\"mx-auto mb-3 border-main\"\r\n                        style={{ maxWidth: \"60rem\" }}\r\n                    >\r\n                        <Card.Header className=\"d-md-flex justify-content-between\">\r\n                            <div>\r\n                                {Moment(item.post_datetime).format(\"LLLL\")}\r\n                            </div>\r\n                            <div>{item.user}</div>\r\n                        </Card.Header>\r\n\r\n                        <Card.Body className=\"border-bottom\">\r\n                            {status && (\r\n                                <CustomAlert\r\n                                    variant=\"warning\"\r\n                                    status={status}\r\n                                />\r\n                            )}\r\n\r\n                            <div>\r\n                                <Linkify\r\n                                    componentDecorator={componentDecorator}\r\n                                >\r\n                                    {item.content}\r\n                                </Linkify>\r\n                                <br /> <br />\r\n                                {item.attachment && (\r\n                                    <>\r\n                                        <div style={{ fontSize: \"0.85rem\" }}>\r\n                                            <span className=\"font-weight-bold\">\r\n                                                Attachment:{\" \"}\r\n                                            </span>\r\n                                            <a\r\n                                                target=\"_blank\"\r\n                                                href={item.attachment}\r\n                                                rel=\"noopener noreferrer\"\r\n                                            >\r\n                                                {item.attachment\r\n                                                    .split(\"/\")\r\n                                                    .pop()}\r\n                                            </a>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                                <div style={{ fontSize: \"0.85rem\" }}>\r\n                                    <span className=\"font-weight-bold\">\r\n                                        Submission Date:{\" \"}\r\n                                    </span>\r\n                                    {Moment(`${item.date} ${item.time}`).format(\r\n                                        \"LLLL\"\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Card.Body>\r\n\r\n                        <Comments\r\n                            item={item}\r\n                            item_pk={item.id}\r\n                            room_pk={props.room_pk}\r\n                            updateItemFlag={updateItemFlag}\r\n                        />\r\n                    </Card>\r\n                ))\r\n            ) : (\r\n                <div className=\"h4 text-muted text-center py-5\">{status}</div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Items;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../../generic/CustomAlert\";\r\n\r\nconst AntTab = withStyles(() => ({\r\n    root: {\r\n        minWidth: 50,\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst CreateSectionModal = (props) => {\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleCreateSection = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/${props.room_pk}/create/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const firstErrorKey = Object.keys(data)[0];\r\n                const firstError =\r\n                    firstErrorKey.toUpperCase() + \": \" + data[firstErrorKey];\r\n                setStatus(firstError);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AntTab\r\n                label={\r\n                    <FontAwesomeIcon\r\n                        className=\"fa-icon\"\r\n                        icon={[\"fas\", \"plus\"]}\r\n                    />\r\n                }\r\n                onClick={handleShow}\r\n            />\r\n\r\n            <Modal\r\n                centered\r\n                size=\"sm\"\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Header closeButton>Create a Section</Modal.Header>\r\n                <Modal.Body>\r\n                    <form\r\n                        ref={form}\r\n                        onSubmit={handleCreateSection}\r\n                        className=\"text-center\"\r\n                    >\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Section title</label>\r\n\r\n                            <input\r\n                                required\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Title\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"w-100 btn btn-main\">\r\n                            Create\r\n                        </button>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateSectionModal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../../generic/CustomAlert\";\r\n\r\nconst DeleteSectionModal = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleAction = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/${props.room_pk}/delete/${props.section_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleShow} className={props.actionButtonClass}>\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n                className=\"text-center\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.modalTitle}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    {status && <CustomAlert variant=\"danger\" status={status} />}\r\n\r\n                    {props.modalBody}\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer className=\"d-flex justify-content-between\">\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                        variant={props.actionVariant}\r\n                        onClick={handleAction}\r\n                    >\r\n                        {props.modalTitle}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DeleteSectionModal;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../../generic/CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst UpdateSectionModal = (props) => {\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleUpdateSection = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/sections/${props.room_pk}/update/${props.section_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const firstErrorKey = Object.keys(data)[0];\r\n                const firstError =\r\n                    firstErrorKey.toUpperCase() + \": \" + data[firstErrorKey];\r\n                setStatus(firstError);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleShow} className={props.actionButtonClass}>\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                size=\"sm\"\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Header closeButton>Update this Section</Modal.Header>\r\n                <Modal.Body>\r\n                    <form\r\n                        ref={form}\r\n                        onSubmit={handleUpdateSection}\r\n                    >\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Section title</label>\r\n\r\n                            <input\r\n                                required\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                placeholder=\"Title\"\r\n                                className=\"form-control\"\r\n                                defaultValue={props.title}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"w-100 btn btn-main\">\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"wrench\"]}\r\n                            />\r\n                            Update\r\n                        </button>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateSectionModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Items from \"./Items/Items\";\r\nimport CustomAlert from \"../../generic/CustomAlert\";\r\n// import CreateItemModal from \"./Items/CreateItemModal\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport CreateSectionModal from \"./CreateSectionModal\";\r\nimport DeleteSectionModal from \"./DeleteSectionModal\";\r\nimport UpdateSectionModal from \"./UpdateSectionModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst TabPanel = (props) => {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n};\r\n\r\nconst Sections = (props) => {\r\n    const [value, setValue] = useState(0);\r\n    const [sections, setSections] = useState([]);\r\n    const [flag, setFlag] = useState(Math.random());\r\n    const [status, setStatus] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/rooms/sections/${props.room_pk}/list/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else setSections(data);\r\n        };\r\n\r\n        loadData();\r\n    }, [props.room_pk, flag]);\r\n\r\n    const updateFlag = () => setFlag(Math.random());\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AppBar\r\n                color=\"default\"\r\n                position=\"static\"\r\n                className=\"text-primary rounded\"\r\n            >\r\n                <Tabs\r\n                    value={value}\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                >\r\n                    {sections.map((section) => (\r\n                        <Tab\r\n                            key={section.id}\r\n                            label={section.title}\r\n                            {...a11yProps(section.id)}\r\n                            style={{ textTransform: \"none\" }}\r\n                        />\r\n                    ))}\r\n\r\n                    <CreateSectionModal\r\n                        room_pk={props.room_pk}\r\n                        updateFlag={updateFlag}\r\n                    />\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            {sections.length ? (\r\n                sections.map((section, index) => (\r\n                    <TabPanel key={section.id} value={value} index={index}>\r\n                        <Items\r\n                            room_pk={props.room_pk}\r\n                            section_pk={section.id}\r\n                        />\r\n\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <Row className=\"d-flex justify-content-between px-3\">\r\n                            {/* <CreateItemModal\r\n                                room_pk={props.room_pk}\r\n                                section_pk={section.id}\r\n                                updateFlag={updateFlag}\r\n                                actionButtonClass=\"btn btn-outline-primary btn-sm my-1\"\r\n                            >\r\n                                Create an Item\r\n                            </CreateItemModal> */}\r\n\r\n                            <UpdateSectionModal\r\n                                modalTitle=\"Update\"\r\n                                title={section.title}\r\n                                actionVariant=\"primary\"\r\n                                room_pk={props.room_pk}\r\n                                section_pk={section.id}\r\n                                updateFlag={updateFlag}\r\n                                actionButtonClass=\"btn btn-outline-amber btn-sm my-1\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"wrench\"]}\r\n                                />\r\n                                Update this Section\r\n                            </UpdateSectionModal>\r\n\r\n                            <DeleteSectionModal\r\n                                modalTitle=\"Delete\"\r\n                                actionVariant=\"danger\"\r\n                                room_pk={props.room_pk}\r\n                                section_pk={section.id}\r\n                                updateFlag={updateFlag}\r\n                                actionButtonClass=\"btn btn-outline-danger btn-sm my-1\"\r\n                                modalBody={`Do you really want to delete \"${section.title}\" section?`}\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fas\", \"times\"]}\r\n                                />\r\n                                Delete this Section\r\n                            </DeleteSectionModal>\r\n                        </Row>\r\n                    </TabPanel>\r\n                ))\r\n            ) : (\r\n                <div className=\"h4 text-muted text-center py-5\">{status}</div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Sections;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport CustomModal from \"../generic/CustomModal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst RoomMembers = (props) => {\r\n    const [status, setStatus] = useState(undefined);\r\n    const [flag, setFlag] = useState(Math.random());\r\n    const [members, setMembers] = useState({\r\n        owner: \"\",\r\n        class_representatives: [],\r\n        teachers: [],\r\n        students: [],\r\n    });\r\n    const [isCR, setIsCR] = useState(false);\r\n    const [pendingUsers, setPendingUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let API_URL = `/api/v1/rooms/members/${props.room_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else setMembers(data[0]);\r\n\r\n            // Check isCR\r\n            API_URL = `/api/v1/rooms/check_CR/${props.room_pk}/`;\r\n\r\n            response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            response.ok && setIsCR(true);\r\n        };\r\n\r\n        loadData();\r\n    }, [props.room_pk, flag]);\r\n\r\n    // Pending user's list\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const API_URL = `/api/v1/rooms/pending_requests/${props.room_pk}/list/`;\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (\r\n                !response.ok &&\r\n                response.status !== 404 &&\r\n                localStorage.getItem(\"status\") !== \"2\"\r\n            )\r\n                setStatus(data.detail);\r\n            else setPendingUsers(data);\r\n        };\r\n\r\n        if (localStorage.getItem(\"status\") !== \"2\" || isCR || flag) loadData();\r\n    }, [isCR, flag, props.room_pk]);\r\n\r\n    const updateFlag = () => setFlag(Math.random());\r\n\r\n    const handleAddPendingUser = (pending_request_pk, username, userstatus) => {\r\n        // Deleting from pending users list\r\n        const loadData = async () => {\r\n            let API_URL = `/api/v1/rooms/pending_requests/${props.room_pk}/delete/${pending_request_pk}/`;\r\n            let response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                let data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        const loadAddMemberData = async () => {\r\n            let API_URL = `/api/v1/rooms/add/${props.room_pk}/${userstatus}/${username}/`;\r\n\r\n            let response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n            });\r\n\r\n            let data = await response.json();\r\n            if (!response.ok) setStatus(data.detail);\r\n        };\r\n\r\n        loadAddMemberData();\r\n        loadData();\r\n        updateFlag();\r\n    };\r\n\r\n    const handleRemovePendingUser = (pending_request_pk) => {\r\n        const API_URL = `/api/v1/rooms/pending_requests/${props.room_pk}/delete/${pending_request_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        updateFlag();\r\n    };\r\n\r\n    const handleAddMember = (username, userstatus) => {\r\n        let API_URL = `/api/v1/rooms/add/${props.room_pk}/${userstatus}/${username}/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        updateFlag();\r\n    };\r\n\r\n    const handleRemoveMember = (username, userstatus) => {\r\n        const API_URL = `/api/v1/rooms/remove/${props.room_pk}/${userstatus}/${username}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        updateFlag();\r\n    };\r\n\r\n    const handleCloseAction = () => setStatus(undefined);\r\n\r\n    return (\r\n        <div>\r\n            {status && (\r\n                <CustomModal\r\n                    show={true}\r\n                    noAction={true}\r\n                    modalTitle=\"Error\"\r\n                    handleCloseAction={handleCloseAction}\r\n                    modalBody={<CustomAlert variant=\"info\" status={status} />}\r\n                />\r\n            )}\r\n\r\n            <div className=\"rounded card-header text-primary members__header\">\r\n                <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"users\"]} />\r\n                Room's Members\r\n            </div>\r\n\r\n            <div className=\"card-header mb-3 border-top border-main members__header\">\r\n                <FontAwesomeIcon className=\"mr-2\" icon={[\"fas\", \"crown\"]} />\r\n                Owner\r\n            </div>\r\n\r\n            <Card className=\"mx-3\">\r\n                <Card.Body className=\"p-2\">{members.owner}</Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"card-header my-3 border-top border-main members__header\">\r\n                <FontAwesomeIcon\r\n                    className=\"mr-2\"\r\n                    icon={[\"fas\", \"chalkboard-teacher\"]}\r\n                />\r\n                Teachers\r\n            </div>\r\n\r\n            <div className=\"mx-3\">\r\n                {members.teachers.map((teacher) => (\r\n                    <Card key={teacher} className=\"my-2\">\r\n                        <Card.Body className=\"p-2\">\r\n                            {teacher}\r\n\r\n                            <div className=\"mt-2\">\r\n                                {localStorage.getItem(\"status\") !== \"2\" && (\r\n                                    <CustomModal\r\n                                        actionVariant=\"danger\"\r\n                                        modalTitle=\"Remove Member\"\r\n                                        handleAction={() =>\r\n                                            handleRemoveMember(\r\n                                                teacher,\r\n                                                \"teacher\"\r\n                                            )\r\n                                        }\r\n                                        actionButtonClass=\"btn btn-outline-danger btn-sm\"\r\n                                        modalBody={`Do you really want to remove ${teacher} from this room?`}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={[\"fas\", \"user-slash\"]}\r\n                                        />\r\n                                    </CustomModal>\r\n                                )}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n\r\n            {members.class_representatives.length !== 0 && (\r\n                <>\r\n                    <div className=\"card-header my-3 border-top border-main members__header\">\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fas\", \"user-shield\"]}\r\n                        />\r\n                        Class Representatives\r\n                    </div>\r\n\r\n                    <div className=\"mx-3\">\r\n                        {members.class_representatives.map(\r\n                            (class_representative) => (\r\n                                <Card\r\n                                    key={class_representative}\r\n                                    className=\"my-2\"\r\n                                >\r\n                                    <Card.Body className=\"p-2\">\r\n                                        {class_representative}\r\n\r\n                                        <div className=\"mt-2\">\r\n                                            {localStorage.getItem(\"status\") !==\r\n                                                \"2\" && (\r\n                                                <CustomModal\r\n                                                    actionVariant=\"danger\"\r\n                                                    modalTitle=\"Remove CR\"\r\n                                                    handleAction={() =>\r\n                                                        handleRemoveMember(\r\n                                                            class_representative,\r\n                                                            \"class_representative\"\r\n                                                        )\r\n                                                    }\r\n                                                    actionButtonClass=\"btn btn-outline-danger btn-sm mr-2\"\r\n                                                    modalBody={`Do you want to remove ${class_representative} from Class Representative's list?`}\r\n                                                >\r\n                                                    RCR\r\n                                                </CustomModal>\r\n                                            )}\r\n\r\n                                            {localStorage.getItem(\"status\") !==\r\n                                                \"2\" && (\r\n                                                <CustomModal\r\n                                                    actionVariant=\"danger\"\r\n                                                    modalTitle=\"Remove Member\"\r\n                                                    handleAction={() =>\r\n                                                        handleRemoveMember(\r\n                                                            class_representative,\r\n                                                            \"class_representative\"\r\n                                                        )\r\n                                                    }\r\n                                                    actionButtonClass=\"btn btn-outline-danger btn-sm\"\r\n                                                    modalBody={`Do you really want to remove ${class_representative} from this room?`}\r\n                                                >\r\n                                                    <FontAwesomeIcon\r\n                                                        icon={[\r\n                                                            \"fas\",\r\n                                                            \"user-slash\",\r\n                                                        ]}\r\n                                                    />\r\n                                                </CustomModal>\r\n                                            )}\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {members.students.length !== 0 && (\r\n                <>\r\n                    <div className=\"card-header my-3 border-top border-main members__header\">\r\n                        <FontAwesomeIcon\r\n                            className=\"mr-2\"\r\n                            icon={[\"fas\", \"user-graduate\"]}\r\n                        />\r\n                        Students\r\n                    </div>\r\n\r\n                    <div className=\"mx-3\">\r\n                        {members.students.map((student) => (\r\n                            <Card key={student} className=\"my-2\">\r\n                                <Card.Body className=\"p-2\">\r\n                                    {student}\r\n\r\n                                    <div className=\"mt-2\">\r\n                                        {localStorage.getItem(\"status\") !==\r\n                                            \"2\" && (\r\n                                            <CustomModal\r\n                                                actionVariant=\"info\"\r\n                                                modalTitle=\"Add CR\"\r\n                                                handleAction={() =>\r\n                                                    handleAddMember(\r\n                                                        student,\r\n                                                        \"class_representative\"\r\n                                                    )\r\n                                                }\r\n                                                actionButtonClass=\"btn btn-outline-info btn-sm mr-2\"\r\n                                                modalBody={`Do you want to add ${student} as a Class Representative of this room?`}\r\n                                            >\r\n                                                CR\r\n                                            </CustomModal>\r\n                                        )}\r\n\r\n                                        {(localStorage.getItem(\"status\") !==\r\n                                            \"2\" ||\r\n                                            isCR) && (\r\n                                            <CustomModal\r\n                                                actionVariant=\"danger\"\r\n                                                modalTitle=\"Remove Member\"\r\n                                                handleAction={() =>\r\n                                                    handleRemoveMember(\r\n                                                        student,\r\n                                                        \"student\"\r\n                                                    )\r\n                                                }\r\n                                                actionButtonClass=\"btn btn-outline-danger btn-sm\"\r\n                                                modalBody={`Do you really want to remove ${student} from this room?`}\r\n                                            >\r\n                                                <FontAwesomeIcon\r\n                                                    icon={[\"fas\", \"user-slash\"]}\r\n                                                />\r\n                                            </CustomModal>\r\n                                        )}\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {!pendingUsers.detail &&\r\n                pendingUsers.length !== 0 &&\r\n                (localStorage.getItem(\"status\") !== \"2\" || isCR) && (\r\n                    <>\r\n                        <div className=\"card-header my-3 border-top border-main members__header\">\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"users-cog\"]}\r\n                            />\r\n                            Pending Requests\r\n                        </div>\r\n\r\n                        <div className=\"mx-3\">\r\n                            {!pendingUsers.detail &&\r\n                                pendingUsers.map((pendingUser) => (\r\n                                    <Card key={pendingUser.id} className=\"my-2\">\r\n                                        <Card.Body className=\"p-2\">\r\n                                            {pendingUser.user}\r\n\r\n                                            <div className=\"mt-2\">\r\n                                                {(localStorage.getItem(\r\n                                                    \"status\"\r\n                                                ) !== \"2\" ||\r\n                                                    isCR) && (\r\n                                                    <CustomModal\r\n                                                        modalTitle=\"Accept Request\"\r\n                                                        actionVariant=\"success\"\r\n                                                        handleAction={() =>\r\n                                                            handleAddPendingUser(\r\n                                                                pendingUser.id,\r\n                                                                pendingUser.user,\r\n                                                                pendingUser.user_status\r\n                                                            )\r\n                                                        }\r\n                                                        actionButtonClass=\"btn btn-outline-success btn-sm mr-2\"\r\n                                                        modalBody={`Do you want to accept ${pendingUser.user}'s request?`}\r\n                                                    >\r\n                                                        <FontAwesomeIcon\r\n                                                            icon={[\r\n                                                                \"fas\",\r\n                                                                \"user-check\",\r\n                                                            ]}\r\n                                                        />\r\n                                                    </CustomModal>\r\n                                                )}\r\n\r\n                                                {(localStorage.getItem(\r\n                                                    \"status\"\r\n                                                ) !== \"2\" ||\r\n                                                    isCR) && (\r\n                                                    <CustomModal\r\n                                                        modalTitle=\"Reject Request\"\r\n                                                        actionVariant=\"danger\"\r\n                                                        handleAction={() =>\r\n                                                            handleRemovePendingUser(\r\n                                                                pendingUser.id\r\n                                                            )\r\n                                                        }\r\n                                                        actionButtonClass=\"btn btn-outline-danger btn-sm\"\r\n                                                        modalBody={`Do you really want to reject ${pendingUser.user}'s request?`}\r\n                                                    >\r\n                                                        <FontAwesomeIcon\r\n                                                            icon={[\r\n                                                                \"fas\",\r\n                                                                \"user-times\",\r\n                                                            ]}\r\n                                                        />\r\n                                                    </CustomModal>\r\n                                                )}\r\n                                            </div>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                ))}\r\n                        </div>\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoomMembers;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\nimport RoomMembers from \"./RoomMembers\";\r\n\r\nconst RoomMembersModal = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleShow}\r\n                disabled={props.edit}\r\n                variant={props.variant}\r\n                size={props.actionButtonSize}\r\n                className={props.actionButtonClass}\r\n                style={{ width: props.actionButtonWidth }}\r\n            >\r\n                {props.children}\r\n            </Button>\r\n\r\n            <Modal\r\n                centered\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Body className=\"p-0\">\r\n                    <RoomMembers room_pk={props.room_pk} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoomMembersModal;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\n\r\nconst UpdateRoomModal = (props) => {\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [status, setStatus] = useState(undefined);\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleCreateSection = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = `/api/v1/rooms/update/${props.room_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const formData = new FormData(form.current);\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"PATCH\",\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const firstErrorKey = Object.keys(data)[0];\r\n                const firstError =\r\n                    firstErrorKey.toUpperCase() + \": \" + data[firstErrorKey];\r\n                setStatus(firstError);\r\n            } else handleClose();\r\n        };\r\n\r\n        loadData();\r\n        props.updateFlag();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button onClick={handleShow} className={props.actionButtonClass}>\r\n                {props.children}\r\n            </button>\r\n\r\n            <Modal\r\n                centered\r\n                size=\"sm\"\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={isAnimated}\r\n            >\r\n                <Modal.Header closeButton>Update this Room</Modal.Header>\r\n                <Modal.Body>\r\n                    <form ref={form} onSubmit={handleCreateSection}>\r\n                        {status && (\r\n                            <CustomAlert variant=\"warning\" status={status} />\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Year</label>\r\n\r\n                            <input\r\n                                required\r\n                                autoFocus\r\n                                name=\"year\"\r\n                                type=\"number\"\r\n                                placeholder=\"Year\"\r\n                                className=\"form-control\"\r\n                                defaultValue={props.year}\r\n                            />\r\n\r\n                            <label className=\"mt-3\">Group</label>\r\n\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"group\"\r\n                                placeholder=\"Group\"\r\n                                className=\"form-control\"\r\n                                defaultValue={props.group}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"w-100 btn btn-main\">\r\n                            Update\r\n                        </button>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UpdateRoomModal;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport Sections from \"./Sections/Sections\";\r\nimport RoomMembers from \"./RoomMembers\";\r\nimport RoomMembersModal from \"./RoomMembersModal\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport UpdateRoomModal from \"./UpdateRoomModal\";\r\nimport CustomModal from \"../generic/CustomModal\";\r\n\r\nconst Rooms = (props) => {\r\n    const [room, setRoom] = useState({});\r\n    const [flag, setFlag] = useState(Math.random());\r\n    const [status, setStatus] = useState(undefined);\r\n    const { handleLogOut } = useContext(AuthenticationContext);\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/rooms/details/${params.room_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            if (response.status === 401) handleLogOut();\r\n            else if (response.status === 406) props.history.push(\"/\");\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else {\r\n                setRoom({\r\n                    ...data[0],\r\n                    course_title: data[0].course.split(\", \")[0],\r\n                    course_details: data[0].course.split(\", \")[1],\r\n                });\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    }, [params.room_pk, handleLogOut, props, flag]);\r\n\r\n    const updateFlag = () => setFlag(Math.random());\r\n\r\n    const handleDelete = () => {\r\n        const API_URL = `/api/v1/rooms/delete/${params.room_pk}/`;\r\n\r\n        const loadData = async () => {\r\n            const response = await fetch(API_URL, {\r\n                method: \"DELETE\",\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const data = await response.json();\r\n                setStatus(data.detail);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"mb-2 text-center text-secondary\">\r\n                <h4 className=\"my-4\">\r\n                    {room.course_title} ({room.year}) {room.course_details}\r\n                    <br />\r\n                    {room.group && `Group: ${room.group}`}\r\n                </h4>\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column flex-md-row justify-content-end\">\r\n                <RoomMembersModal\r\n                    actionButtonSize=\"sm\"\r\n                    room_pk={params.room_pk}\r\n                    variant=\"outline-primary\"\r\n                    actionButtonClass=\"d-md-none mb-2\"\r\n                >\r\n                    <FontAwesomeIcon icon={[\"fas\", \"users\"]} className=\"mr-2\" />\r\n                    Show Member's List\r\n                </RoomMembersModal>\r\n\r\n                <UpdateRoomModal\r\n                    year={room.year}\r\n                    group={room.group}\r\n                    modalTitle=\"Update\"\r\n                    actionVariant=\"primary\"\r\n                    room_pk={params.room_pk}\r\n                    updateFlag={updateFlag}\r\n                    actionButtonClass=\"btn btn-outline-secondary btn-sm mb-2 mr-md-2\"\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={[\"fas\", \"wrench\"]}\r\n                        className=\"mr-2\"\r\n                    />\r\n                    Update this Room\r\n                </UpdateRoomModal>\r\n\r\n                <CustomModal\r\n                    redirect=\"/\"\r\n                    modalTitle=\"Delete\"\r\n                    actionVariant=\"danger\"\r\n                    handleAction={handleDelete}\r\n                    actionButtonClass=\"btn btn-outline-danger btn-sm mb-2\"\r\n                    modalBody={`Do you really want to delete this Room? P.S: This action cannot be undone`}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        className=\"mr-2\"\r\n                        icon={[\"fa\", \"trash-alt\"]}\r\n                    />\r\n                    Delete this Room\r\n                </CustomModal>\r\n            </div>\r\n\r\n            {status && <CustomAlert variant=\"warning\" status={status} />}\r\n\r\n            <Row className=\"p-3\">\r\n                <Col\r\n                    md={3}\r\n                    className=\"rounded d-none d-md-block border border-main border-right-0 px-0\"\r\n                >\r\n                    <RoomMembers room_pk={params.room_pk} />\r\n                </Col>\r\n                <Col md={9} className=\"rounded border border-main px-0\">\r\n                    <Sections room_pk={params.room_pk} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Rooms;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./Sign.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport default class SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: {},\r\n            username: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    handle_change_signin = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState((prevstate) => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handle_signin = (e, data) => {\r\n        e.preventDefault();\r\n        let endpoint = \"/api/v1/accounts/login/\";\r\n        var obj = { username: data.username, password: data.password };\r\n        let body = JSON.stringify(obj);\r\n\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        axios\r\n            .post(endpoint, body, config)\r\n            .then((json) => {\r\n                localStorage.setItem(\"username\", json.data.user.username);\r\n                localStorage.setItem(\"status\", json.data.user.status);\r\n                localStorage.setItem(\"reg_no\", json.data.user.reg_no);\r\n                localStorage.setItem(\"email\", json.data.user.email);\r\n                localStorage.setItem(\"isAuthenticated\", \"authenticated\");\r\n                localStorage.setItem(\"user_id\", json.data.user.pk);\r\n                localStorage.setItem(\"dept_id\", json.data.user.department);\r\n                window.location.href = \"/\";\r\n            })\r\n            .catch((err) => {\r\n                this.setState(\r\n                    {\r\n                        errors: err.response.data,\r\n                    },\r\n                    () => {\r\n                        console.log(this.state.errors);\r\n                    }\r\n                );\r\n            });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.setState(\r\n            {\r\n                errors: {},\r\n            },\r\n            () => console.log(this.state.errors, \"sdfghs\")\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                size=\"md\"\r\n                centered\r\n                {...this.props}\r\n                className=\"sign\"\r\n                animation={this.props.animation}\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n            >\r\n                <Modal.Body className=\"sign__body\">\r\n                    <h2 className=\"text-center sign__heading\">Sign In</h2>\r\n\r\n                    {Object.keys(this.state.errors).length !== 0 &&\r\n                    this.state.errors[\"password\"] ? (\r\n                        <CustomAlert\r\n                            status={\r\n                                \"Password: \" + this.state.errors[\"password\"]\r\n                            }\r\n                        /> // non_field_errors\r\n                    ) : (\r\n                        this.state.errors[\"non_field_errors\"] && (\r\n                            <CustomAlert\r\n                                status={\r\n                                    this.state.errors[\"non_field_errors\"][0]\r\n                                }\r\n                            /> // non_field_errors\r\n                        )\r\n                    )}\r\n\r\n                    <Form onSubmit={(e) => this.handle_signin(e, this.state)}>\r\n                        <Form.Group controlId=\"signIn__email\">\r\n                            {/* <Form.Label>Email address</Form.Label> */}\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                name=\"username\"\r\n                                onChange={this.handle_change_signin}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={this.handle_change_signin}\r\n                            />\r\n                        </Form.Group>\r\n                        <Button\r\n                            variant=\"btn-block\"\r\n                            type=\"submit\"\r\n                            className=\"w-100 sign__submit\"\r\n                        >\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"sign-in-alt\"]}\r\n                            />\r\n                            SignIn\r\n                        </Button>\r\n                    </Form>\r\n\r\n                    <div\r\n                        onClick={this.props.onHide}\r\n                        className=\"forgot-password mt-2 text-right\"\r\n                    >\r\n                        <Link to=\"/password/reset/\">Forgot password?</Link>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n","import \"./Sign.scss\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React, { Component } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\n// import { createHashHistory } from \"history\";\r\nimport LoadingScreen from \"../generic/LoadingScreen\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// export const history = createHashHistory();\r\nconst axios = require(\"axios\");\r\n\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dept: [],\r\n            varsity: [],\r\n            status: null,\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            university: null,\r\n            department: null,\r\n            reg_no: null,\r\n            username: \"\",\r\n            name: \"\",\r\n            errors: {},\r\n            promise: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let endpoint = \"/api/v1/university/departments/list/\";\r\n        let endpoint1 = \"/api/v1/university/details/\";\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        axios\r\n            .get(endpoint, config)\r\n            .then((response) => {\r\n                let tmparray = [];\r\n                for (var i = 0; i < response.data.length; i++) {\r\n                    tmparray.push(response.data[i]);\r\n                }\r\n                this.setState({\r\n                    dept: tmparray,\r\n                    department: tmparray[0].id,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    promise: false,\r\n                });\r\n            });\r\n\r\n        axios\r\n            .get(endpoint1, config)\r\n            .then((response) => {\r\n                let tmparray = [];\r\n                for (var i = 0; i < response.data.length; i++) {\r\n                    tmparray.push(response.data[i]);\r\n                }\r\n                this.setState({\r\n                    varsity: tmparray,\r\n                    university: tmparray[0].id,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    promise: false,\r\n                });\r\n            });\r\n    }\r\n\r\n    handle_signup = (e, data) => {\r\n        e.preventDefault();\r\n\r\n        let endpoint = \"/api/v1/accounts/registration/\";\r\n        var obj;\r\n        if (this.state.status === \"2\")\r\n            obj = {\r\n                username: data.name + \"_\" + data.reg_no,\r\n                email: data.email,\r\n                password1: data.password1,\r\n                password2: data.password2,\r\n                department: data.department,\r\n                university: data.university,\r\n                reg_no: data.reg_no,\r\n                status: data.status,\r\n            };\r\n        else\r\n            obj = {\r\n                username: data.username,\r\n                email: data.email,\r\n                password1: data.password1,\r\n                password2: data.password2,\r\n                department: data.department,\r\n                university: data.university,\r\n                reg_no: null,\r\n                status: data.status,\r\n            };\r\n        let body = JSON.stringify(obj);\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        this.setState({\r\n            promise: true,\r\n        });\r\n        axios\r\n            .post(endpoint, body, config)\r\n            .then((response) => {\r\n                this.setState({\r\n                    promise: false,\r\n                });\r\n                this.props.history.push(\r\n                    `/email/confirmation/sent/${this.state.email}/`\r\n                );\r\n                this.props.onHide();\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    promise: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    handle_change_signin = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState((prevstate) => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    toggleForm = (e) => {\r\n        this.setState((prevstate) => {\r\n            const newState = { ...prevstate };\r\n            newState[\"status\"] = e.target.value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handle_change_uni = (e) => {\r\n        this.setState((prevstate) => {\r\n            const newState = { ...prevstate };\r\n            newState[\"university\"] = e.target.value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handle_change_dept = (e) => {\r\n        this.setState((prevstate) => {\r\n            const newState = { ...prevstate };\r\n            newState[\"department\"] = e.target.value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dept } = this.state;\r\n        const { varsity } = this.state;\r\n        const { staticContext, ...rest } = this.props;\r\n\r\n        let departmentlist =\r\n            dept.length > 0 &&\r\n            dept.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>\r\n                        {item.name}\r\n                    </option>\r\n                );\r\n            });\r\n        let varsitylist =\r\n            varsity.length > 0 &&\r\n            varsity.map((item, i) => {\r\n                return (\r\n                    <option key={i} value={item.id}>\r\n                        {item.name}\r\n                    </option>\r\n                );\r\n            });\r\n        return (\r\n            <>\r\n                {this.state.promise ? (\r\n                    <LoadingScreen />\r\n                ) : (\r\n                    <Modal\r\n                        size=\"md\"\r\n                        centered\r\n                        {...rest}\r\n                        className=\"sign\"\r\n                        animation={this.props.animation}\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Body className=\"sign__body\">\r\n                            <h2 className=\"text-center sign__heading\">\r\n                                Sign Up\r\n                            </h2>\r\n\r\n                            {Object.keys(this.state.errors).length !== 0 &&\r\n                                (this.state.errors[\"status\"] ? (\r\n                                    <CustomAlert\r\n                                        status={\r\n                                            \"Select Role: \" +\r\n                                            this.state.errors[\"status\"]\r\n                                        }\r\n                                    />\r\n                                ) : this.state.errors[\"username\"] ? (\r\n                                    <CustomAlert\r\n                                        status={this.state.errors[\"username\"]}\r\n                                    />\r\n                                ) : this.state.errors[\"email\"] ? (\r\n                                    <CustomAlert\r\n                                        status={this.state.errors[\"email\"]}\r\n                                    />\r\n                                ) : this.state.errors[\"password1\"] ? (\r\n                                    <CustomAlert\r\n                                        status={this.state.errors[\"password1\"]}\r\n                                    />\r\n                                ) : this.state.errors[\"password2\"] ? (\r\n                                    <CustomAlert\r\n                                        status={this.state.errors[\"password2\"]}\r\n                                    />\r\n                                ) : (\r\n                                    <CustomAlert\r\n                                        status={`${\r\n                                            Object.keys(this.state.errors)[0]\r\n                                        }: ${\r\n                                            this.state.errors[\r\n                                                Object.keys(\r\n                                                    this.state.errors\r\n                                                )[0]\r\n                                            ]\r\n                                        }`}\r\n                                    />\r\n                                ))}\r\n\r\n                            <Form\r\n                                className=\"sign__form\"\r\n                                onSubmit={(e) =>\r\n                                    this.handle_signup(e, this.state)\r\n                                }\r\n                            >\r\n                                <Form.Group\r\n                                    controlId=\"exampleForm.ControlSelect1\"\r\n                                    onChange={this.toggleForm}\r\n                                >\r\n                                    <Form.Control as=\"select\" required>\r\n                                        <option value=\"null\">\r\n                                            Select Role\r\n                                        </option>\r\n                                        <option value=\"2\">Student</option>\r\n                                        <option value=\"1\">Teacher</option>\r\n                                        <option value=\"0\">Admin</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Row>\r\n                                    {this.state.status === \"2\" ? (\r\n                                        <Form.Group\r\n                                            as={Col}\r\n                                            controlId=\"signUp__userId\"\r\n                                        >\r\n                                            <Form.Control\r\n                                                required\r\n                                                type=\"text\"\r\n                                                placeholder=\"Name\"\r\n                                                name=\"name\"\r\n                                                onChange={\r\n                                                    this.handle_change_signin\r\n                                                }\r\n                                            />\r\n                                        </Form.Group>\r\n                                    ) : null}\r\n                                    {this.state.status === \"2\" ? (\r\n                                        <Form.Group as={Col} controlId=\"regNo\">\r\n                                            <Form.Control\r\n                                                required\r\n                                                type=\"number\"\r\n                                                placeholder=\"Registration No\"\r\n                                                name=\"reg_no\"\r\n                                                onChange={\r\n                                                    this.handle_change_signin\r\n                                                }\r\n                                            />\r\n                                        </Form.Group>\r\n                                    ) : (\r\n                                        <Form.Group\r\n                                            as={Col}\r\n                                            controlId=\"signUp__userId\"\r\n                                        >\r\n                                            <Form.Control\r\n                                                required\r\n                                                type=\"text\"\r\n                                                placeholder=\"Username\"\r\n                                                name=\"username\"\r\n                                                onChange={\r\n                                                    this.handle_change_signin\r\n                                                }\r\n                                            />\r\n                                        </Form.Group>\r\n                                    )}\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"university\">\r\n                                        <Form.Control\r\n                                            required\r\n                                            as=\"select\"\r\n                                            type=\"number\"\r\n                                            onChange={this.handle_change_uni}\r\n                                        >\r\n                                            {varsitylist}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"department\">\r\n                                        <Form.Control\r\n                                            required\r\n                                            as=\"select\"\r\n                                            onChange={this.handle_change_dept}\r\n                                        >\r\n                                            {departmentlist}\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Group controlId=\"signUp__email\">\r\n                                    <Form.Control\r\n                                        required\r\n                                        type=\"email\"\r\n                                        placeholder=\"Email Address\"\r\n                                        name=\"email\"\r\n                                        onChange={this.handle_change_signin}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"password\">\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            name=\"password1\"\r\n                                            onChange={this.handle_change_signin}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group\r\n                                        as={Col}\r\n                                        controlId=\"confirm_password\"\r\n                                    >\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            name=\"password2\"\r\n                                            onChange={this.handle_change_signin}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"btn-block\"\r\n                                    className=\"w-100 sign__submit\"\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        className=\"mr-2\"\r\n                                        icon={[\"fas\", \"user-plus\"]}\r\n                                    />\r\n                                    SignUp\r\n                                </Button>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","// import React from \"react\";\r\n\r\n// class Notifications extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             workflow_state: \"{{ note.workflow_state }}\", // set based on the model\r\n//         };\r\n//     }\r\n\r\n//     // instance of websocket connection as a class property\r\n//     ws = new WebSocket(\"ws://localhost:8000/api/v1/notifications/\");\r\n\r\n//     componentDidMount() {\r\n//         this.ws.onopen = () => {\r\n//             // on connecting, do nothing but log it to the console\r\n//             console.log(\"connected\");\r\n//         };\r\n\r\n//         this.ws.onmessage = (evt) => {\r\n//             // listen to data sent from the websocket server\r\n//             const message = JSON.parse(evt.data);\r\n//             if (message[\"note_id\"] === 1) {\r\n//                 //{{ note.id }}) {\r\n//                 this.setState(message);\r\n//             }\r\n//             console.log(message);\r\n//         };\r\n\r\n//         this.ws.onclose = () => {\r\n//             console.log(\"disconnected\");\r\n//             // automatically try to reconnect on connection loss\r\n//         };\r\n//     }\r\n\r\n//     retracted = () => {\r\n//         console.log(\"got a message that we are now draft\");\r\n//         this.setState({ workflow_state: \"draft\" });\r\n//     };\r\n//     published = () => {\r\n//         console.log(\"got a message that we are now published\");\r\n//         this.setState({ workflow_state: \"published\" });\r\n//     };\r\n//     retract = () => {\r\n//         console.log(\"Retracting\");\r\n//         // fetch('{% url 'Note-retract' pk=note.id %}')\r\n//         //     .then((response) => {\r\n//         //       return response.json();\r\n//         //     })\r\n//         //     .then((data) => {\r\n//         //       console.log(data);\r\n//         //     });\r\n\r\n//         // this.setState({workflow_state: 'draft'})\r\n//     };\r\n//     publish = () => {\r\n//         console.log(\"Publishing\");\r\n//         // fetch('{% url 'Note-publish' pk=note.id %}')\r\n//         //     .then((response) => {\r\n//         //         return response.json();\r\n//         //     })\r\n//         //     .then((data) => {\r\n//         //         console.log(data);\r\n//         //     });\r\n\r\n//         // this.setState({workflow_state: 'published'})\r\n//     };\r\n//     render() {\r\n//         const wf_state = this.state.workflow_state;\r\n//         const can_publish = wf_state === \"draft\";\r\n//         const can_retract = wf_state === \"published\";\r\n//         return (\r\n//             <div>\r\n//                 <button\r\n//                     className={\r\n//                         \"btn\" +\r\n//                         (can_publish\r\n//                             ? \" btn-outline-secondary disabled\"\r\n//                             : \" btn-primary\")\r\n//                     }\r\n//                     disabled={can_publish}\r\n//                     aria-disabled={can_publish}\r\n//                     type=\"button\"\r\n//                     onClick={this.retract}\r\n//                 >\r\n//                     Retract\r\n//                 </button>\r\n//                 <button\r\n//                     className={\r\n//                         \"btn\" +\r\n//                         (can_retract\r\n//                             ? \" btn-outline-secondary disabled\"\r\n//                             : \" btn-primary\")\r\n//                     }\r\n//                     disabled={can_retract}\r\n//                     aria-disabled={can_retract}\r\n//                     type=\"button\"\r\n//                     onClick={this.publish}\r\n//                 >\r\n//                     Publish\r\n//                 </button>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Notifications;\r\n\r\n// // const mount = document.getElementById(\"workflow-widget\");\r\n// // const workflowStatus = <WorkflowStatus />;\r\n// // ReactDOM.render(workflowStatus, mount);\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Notifications = () => {\r\n    const [status, setStatus] = useState(undefined);\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const API_URL = `/api/v1/notifications/list/`;\r\n\r\n        const loadData = async () => {\r\n            let response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            let data = await response.json();\r\n\r\n            if (!response.ok) setStatus(data.detail);\r\n            else setNotifications(data);\r\n        };\r\n\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {status && <CustomAlert variant=\"warning\" status={status} />}\r\n\r\n            {notifications.map((notification) => (\r\n                <NavDropdown.Item\r\n                    key={notification.id}\r\n                    className=\"text-wrap my-2\"\r\n                    style={{ width: \"16rem\" }}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        className=\"mr-2\"\r\n                        icon={[\"fas\", \"exclamation-circle\"]}\r\n                    />\r\n                    {notification.content}\r\n                </NavDropdown.Item>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useContext } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SignIn from \"../Authentication/SignIn\";\r\nimport SignUp from \"../Authentication/SignUp\";\r\nimport \"./Navbar.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../Authentication/Logout\";\r\nimport { AuthenticationContext } from \"../../contexts/AuthenticationContext\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\n\r\nconst Navs = () => {\r\n    const { isAnimated } = useContext(SettingsContext);\r\n    const [signInShow, setSignInShow] = React.useState(false);\r\n    const [signUpShow, setSignUpShow] = React.useState(false);\r\n    const { handleLogOut } = useContext(AuthenticationContext);\r\n\r\n    return (\r\n        <Navbar bg=\"\" variant=\"light\" className=\"nav\">\r\n            <Navbar.Brand as={Link} to=\"/\" className=\"nav__brand\">\r\n                <img\r\n                    src={\"/static/img/logo.png\"}\r\n                    width={\"40\"}\r\n                    height={\"40\"}\r\n                    className={\"d-inline-block align-top\"}\r\n                    alt={\"logo\"}\r\n                />\r\n                <span className=\"nav__heading\">ClassPortal</span>\r\n            </Navbar.Brand>\r\n\r\n            {!localStorage.getItem(\"isAuthenticated\") ? (\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link>\r\n                        <button\r\n                            className=\"nav__btn__sign btn__none\"\r\n                            onClick={() => setSignInShow(true)}\r\n                        >\r\n                            Sign In\r\n                        </button>\r\n                    </Nav.Link>\r\n\r\n                    <Nav.Link>\r\n                        <button\r\n                            className=\"nav__btn__sign btn__none\"\r\n                            onClick={() => setSignUpShow(true)}\r\n                        >\r\n                            Sign Up\r\n                        </button>\r\n                    </Nav.Link>\r\n                </Nav>\r\n            ) : (\r\n                <Nav className=\"ml-auto\">\r\n                    {/* Unity simulation */}\r\n                    <Nav.Link as={NavLink} to=\"/simulation/\" id=\"nav-dropdown\">\r\n                        <FontAwesomeIcon\r\n                            style={{ fontSize: \"1.09rem\" }}\r\n                            icon={[\"fab\", \"unity\"]}\r\n                        />\r\n                        <span className=\"d-none d-md-inline font-weight-bold\">\r\n                            Simulations\r\n                        </span>\r\n                    </Nav.Link>\r\n                    {/* Unity simulation */}\r\n\r\n                    {/* <NavDropdown\r\n                        id=\"nav-dropdown\"\r\n                        alignRight={true}\r\n                        title={<FontAwesomeIcon icon={[\"fas\", \"search\"]} />}\r\n                    >\r\n                        <Form inline className=\"nav__src__form\">\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text className=\"nav__src__form__icon\">\r\n                                        <FontAwesomeIcon icon=\"search\" />\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    placeholder=\"Search Course\"\r\n                                    aria-label=\"search\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    type=\"search\"\r\n                                />\r\n                            </InputGroup>\r\n                        </Form>\r\n                    </NavDropdown> */}\r\n\r\n                    <NavDropdown\r\n                        id=\"nav-dropdown\"\r\n                        alignRight={true}\r\n                        title={\r\n                            <FontAwesomeIcon\r\n                                className=\"fa-icon\"\r\n                                icon={[\"fas\", \"bell\"]}\r\n                            />\r\n                        }\r\n                        variant=\"\"\r\n                    >\r\n                        <Notifications />\r\n                    </NavDropdown>\r\n\r\n                    <NavDropdown\r\n                        id=\"nav-dropdown\"\r\n                        alignRight={true}\r\n                        title={\r\n                            <FontAwesomeIcon\r\n                                className=\"fa-icon\"\r\n                                icon={[\"fas\", \"user\"]}\r\n                            />\r\n                        }\r\n                    >\r\n                        <NavDropdown.Item\r\n                            eventKey=\"1\"\r\n                            as={NavLink}\r\n                            to=\"/profile/\"\r\n                        >\r\n                            Profile\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            eventKey=\"2\"\r\n                            as={NavLink}\r\n                            to=\"/myrooms/\"\r\n                        >\r\n                            My Rooms\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Item\r\n                            eventKey=\"3\"\r\n                            onClick={() => handleLogOut()}\r\n                        >\r\n                            Sign Out\r\n                        </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Nav>\r\n            )}\r\n            <SignIn\r\n                show={signInShow}\r\n                animation={isAnimated}\r\n                onHide={() => setSignInShow(false)}\r\n            />\r\n            <SignUp\r\n                show={signUpShow}\r\n                animation={isAnimated}\r\n                onHide={() => setSignUpShow(false)}\r\n            />\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Navs;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default class Dept extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            invalid: false,\r\n            rooms: [],\r\n            rooms_length: null,\r\n            dept_name: \"\",\r\n            dept_id: null,\r\n            pending_rooms_id: [],\r\n            enrolled_rooms_id: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: { params },\r\n        } = this.props;\r\n        const id = params.id;\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const fetchcourses = async () => {\r\n            let endpoint = `/api/v1/rooms/${id}/list/`;\r\n            await axios\r\n                .get(endpoint, config)\r\n                .then((response) => {\r\n                    let tmparray = [];\r\n\r\n                    for (var j = 0; j < response.data.length; j++) {\r\n                        tmparray.push(response.data[j]);\r\n                    }\r\n\r\n                    this.setState({\r\n                        rooms: tmparray,\r\n                        rooms_length: response.data.length,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        const fetch_dept_details = async () => {\r\n            let endpoint = `/api/v1/university/departments/details/${id}/`;\r\n            await axios\r\n                .get(endpoint, config)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        dept_id: response.data.id,\r\n                        dept_name: response.data[0].name,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n\r\n        const fetchuserrooms = async () => {\r\n            let endpoint2 = \"/api/v1/rooms/user_room_list/\";\r\n            await axios\r\n                .get(endpoint2, config)\r\n                .then((response) => {\r\n                    let tmprooms = [];\r\n\r\n                    for (let k = 0; k < response.data.length; k++) {\r\n                        tmprooms.push(response.data[k].id);\r\n                    }\r\n                    this.setState({\r\n                        enrolled_rooms_id: [\r\n                            ...this.state.enrolled_rooms_id,\r\n                            ...tmprooms,\r\n                        ],\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    // console.log(err);\r\n                });\r\n        };\r\n\r\n        const fetchUserPendingRooms = async () => {\r\n            const API_URL = \"/api/v1/rooms/user_pending_request_room_list/\";\r\n\r\n            const response = await fetch(API_URL, {\r\n                method: \"GET\",\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            let tmp = [];\r\n\r\n            for (let i = 0; i < data.length; i++) tmp.push(data[i].id);\r\n\r\n            this.setState({\r\n                pending_rooms_id: tmp,\r\n            });\r\n\r\n            // if (!response.ok) this.setState({ status: data.detail });\r\n        };\r\n\r\n        if (localStorage.getItem(\"isAuthenticated\")) fetchUserPendingRooms();\r\n\r\n        if (id) {\r\n            await fetchcourses();\r\n            await fetchuserrooms();\r\n        }\r\n        await fetch_dept_details();\r\n    }\r\n\r\n    render() {\r\n        let courselists;\r\n        if (this.state.rooms) {\r\n            courselists = this.state.rooms.map((item) => (\r\n                <div key={item.id}>\r\n                    <Card border=\"main\" className=\"course\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"course__name\">\r\n                                {item.course.split(\",\")[0]} ({item.year})\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                {item.course.split(\",\")[1]}\r\n                            </Card.Subtitle>\r\n                            {localStorage.getItem(\"isAuthenticated\") &&\r\n                            this.state.enrolled_rooms_id.includes(item.id) ? (\r\n                                <div>\r\n                                    <Link to={`/rooms/${item.id}`}>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"primary\"\r\n                                            style={{\r\n                                                float: \"right\",\r\n                                                marginBottom: \"10px\",\r\n                                            }}\r\n                                        >\r\n                                            <FontAwesomeIcon\r\n                                                icon={[\"fas\", \"sign-in-alt\"]}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            Enter\r\n                                        </Button>\r\n                                    </Link>\r\n                                </div>\r\n                            ) : (\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        float: \"right\",\r\n                                        marginBottom: \"10px\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                        this.room_enroll(\r\n                                            item.id,\r\n                                            this.state.pending_rooms_id.includes(\r\n                                                item.id\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {this.state.pending_rooms_id.includes(\r\n                                        item.id\r\n                                    ) ? (\r\n                                        <>\r\n                                            <FontAwesomeIcon\r\n                                                icon={[\"fas\", \"spinner\"]}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            Pending...\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <FontAwesomeIcon\r\n                                                icon={[\"fas\", \"paper-plane\"]}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            Enroll\r\n                                        </>\r\n                                    )}\r\n                                </Button>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            ));\r\n        }\r\n        return (\r\n            <Container className=\"dept\" fluid>\r\n                <h2 className=\"dept__name\">{this.state.dept_name}</h2>\r\n                <CardColumns className=\"container\">{courselists}</CardColumns>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomAlert from \"../generic/CustomAlert\";\r\nimport \"./CreateCourse.scss\";\r\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\r\nconst axios = require(\"axios\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n        maxWidth: 300,\r\n    },\r\n}));\r\n\r\nconst CreateCourse = (props) => {\r\n    const classes = useStyles();\r\n    const form = useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [courses, setCourses] = useState(null);\r\n    //const [select_course, set_select_course] = useState(null);\r\n    //const [created_rooms, set_Created_rooms] = useState([]);\r\n    const [errors, seterrors] = useState(\"\");\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { isAnimated } = useContext(SettingsContext);\r\n\r\n    useEffect(() => {\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const dept_id = localStorage.getItem(\"dept_id\");\r\n\r\n        const loadCourse = async () => {\r\n            let endpoint = `/api/v1/university/departments/courses/${dept_id}/list/`;\r\n            let tmpcourse = [];\r\n            await axios\r\n                .get(endpoint, config)\r\n                .then((response) => {\r\n                    for (let i = 0; i < response.data.length; i++)\r\n                        tmpcourse.push(response.data[i]);\r\n                    if (response.data.length) {\r\n                        setCourses(tmpcourse);\r\n                        //set_select_course(tmpcourse[0].id);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    //.log(err);\r\n                });\r\n        };\r\n        dept_id && loadCourse();\r\n\r\n        /*const fetchuserrooms = async () => {\r\n            let endpoint2 = `/api/v1/rooms/user_room_list/`;\r\n            await axios\r\n                .get(endpoint2, config)\r\n                .then((response) => {\r\n                    let tmprooms = [];\r\n                    console.log(response.data)\r\n                    for(let k=0; k<response.data.length; k++) {\r\n                        tmprooms.push(response.data[k].id)\r\n                    }\r\n                    set_Created_rooms([...created_rooms, ...tmprooms]);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        };\r\n        fetchuserrooms();*/\r\n    }, []);\r\n\r\n    const handle_course_create = (e) => {\r\n        e.preventDefault();\r\n\r\n        const loadData = async () => {\r\n            const API_URL = \"/api/v1/rooms/create/\";\r\n            const formData = new FormData(form.current);\r\n\r\n            try {\r\n                const response = await fetch(API_URL, {\r\n                    method: \"POST\",\r\n                    body: formData,\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (!response.ok) seterrors(data.detail);\r\n                else handleClose();\r\n            } catch (error) {\r\n                seterrors(error);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    };\r\n\r\n    if (localStorage.getItem(\"status\") === \"1\" && courses) {\r\n        let courselist =\r\n            courses.length > 0 &&\r\n            courses.map((item, i) => {\r\n                //if(!created_rooms.includes(item.id)){\r\n                return (\r\n                    <option key={i} value={item.id}>\r\n                        {item.title}\r\n                    </option>\r\n                );\r\n                //}\r\n            });\r\n        return (\r\n            <>\r\n                <Fab\r\n                    onClick={handleShow}\r\n                    className={classes.fab}\r\n                    style={{ backgroundColor: \"#c35cff\", color: \"#FFFCF7\" }}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Modal\r\n                    centered\r\n                    show={show}\r\n                    onHide={handleClose}\r\n                    animation={isAnimated}\r\n                >\r\n                    <Modal.Body>\r\n                        <h2 className=\"text-center\">Create Room</h2>\r\n                        {Object.keys(errors).length !== 0 && (\r\n                            <CustomAlert status={JSON.stringify(errors)} />\r\n                        )}\r\n                        <Form\r\n                            ref={form}\r\n                            className=\"form\"\r\n                            onSubmit={handle_course_create}\r\n                        >\r\n                            <Form.Group className=\"form__group\">\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    type=\"number\"\r\n                                    name=\"course\"\r\n                                    className=\"form__control\"\r\n                                >\r\n                                    {courselist}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"form__group\">\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"Year\"\r\n                                    name=\"year\"\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"form__group\">\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Group\"\r\n                                    name=\"group\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <Button\r\n                                    onClick={handleClose}\r\n                                    variant=\"outline-danger\"\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    className=\"course__submit\"\r\n                                >\r\n                                    Create\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nexport default CreateCourse;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { CardColumns } from \"react-bootstrap\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst axios = require(\"axios\");\r\n\r\nexport default class MyRooms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            invalid: false,\r\n            rooms: [],\r\n            rooms_length: null,\r\n            enrolled_rooms_id: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n        const fetchcourses = async () => {\r\n            let endpoint = `/api/v1/rooms/user_room_list/`;\r\n            await axios\r\n                .get(endpoint, config)\r\n                .then((response) => {\r\n                    let tmparray = [];\r\n\r\n                    for (var j = 0; j < response.data.length; j++) {\r\n                        tmparray.push(response.data[j]);\r\n                    }\r\n\r\n                    this.setState({\r\n                        rooms: tmparray,\r\n                        rooms_length: response.data.length,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    //console.log(err);\r\n                });\r\n        };\r\n        await fetchcourses();\r\n    }\r\n\r\n    render() {\r\n        let courselists;\r\n        if (this.state.rooms) {\r\n            courselists = this.state.rooms.map((item) => (\r\n                <div key={item.id}>\r\n                    <Card border=\"main\" className=\"course\">\r\n                        <Card.Body>\r\n                            <Card.Title className=\"course__name\">\r\n                                {item.course.split(\",\")[0]} ({item.year})\r\n                            </Card.Title>\r\n                            <Card.Subtitle className=\"mb-2 text-muted\">\r\n                                {item.course.split(\",\")[1]}\r\n                            </Card.Subtitle>\r\n                            <div>\r\n                                <Link to={`/rooms/${item.id}`}>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        color=\"primary\"\r\n                                        style={{\r\n                                            float: \"right\",\r\n                                            marginBottom: \"10px\",\r\n                                        }}\r\n                                    >\r\n                                        <FontAwesomeIcon\r\n                                            icon={[\"fas\", \"sign-in-alt\"]}\r\n                                            className=\"mr-2\"\r\n                                        />\r\n                                        Enter\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            ));\r\n        }\r\n\r\n        return (\r\n            <Container className=\"dept\" fluid>\r\n                <h2 className=\"dept__name\">My Rooms</h2>\r\n                {courselists.length ? (\r\n                    <CardColumns className=\"container\">\r\n                        {courselists}\r\n                    </CardColumns>\r\n                ) : (\r\n                    <div className=\"container\">\r\n                        <h3 className=\"text-center text-muted\">\r\n                            You haven't joined any room yet!\r\n                        </h3>\r\n                    </div>\r\n                )}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport Unity, { UnityContent } from \"react-unity-webgl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Simulation = () => {\r\n    const [simulation, setSimulation] = useState({});\r\n    // const [progression, setProgression] = useState(0);\r\n    // const [display, setDisplay] = useState(false);\r\n\r\n    // Dummy data for showing a simulation (cell simulation)\r\n    useEffect(() => {\r\n        let tmp = {\r\n            title: \"Cell Simulation\",\r\n            fileName: \"CellSimulation\",\r\n            description: `The cell is the basic structural, functional, and biological unit of all known organisms. A cell is the smallest unit of life. Cells are often called the \"building blocks of life\". The study of cells is called cell biology, cellular biology, or cytology. Cells consist of cytoplasm enclosed within a membrane, which contains many biomolecules such as proteins and nucleic acids. Most plant and animal cells are only visible under a light microscope, with dimensions between 1 and 100 micrometres. Electron microscopy gives a much higher resolution showing greatly detailed cell structure. Organisms can be classified as unicellular (consisting of a single cell such as bacteria) or multicellular (including plants and animals). Most unicellular organisms are classed as microorganisms. The number of cells in plants and animals varies from species to species; it has been estimated that humans contain somewhere around 40 trillion (4×10^13) cells. The human brain accounts for around 80 billion of these cells.`,\r\n        };\r\n\r\n        setSimulation(tmp);\r\n    }, []);\r\n\r\n    const unityContent = new UnityContent(\r\n        `/static/Simulators/${simulation.fileName}/Build/${simulation.fileName}.json`,\r\n        `/static/Simulators/${simulation.fileName}/Build/UnityLoader.js`\r\n    );\r\n\r\n    // useEffect(() => {\r\n    //     unityContent.on(\"progress\", progress => {\r\n    //         progress === 1 && setDisplay(true)\r\n    //         setProgression(progression)\r\n    //     });\r\n    // }, [unityContent]);\r\n\r\n    return (\r\n        <>\r\n            {simulation.fileName && (\r\n                <Container\r\n                    fluid\r\n                    className=\"mt-4\"\r\n                    style={{ maxWidth: \"100rem\" }}\r\n                >\r\n                    <h3 className=\"text-center\">{simulation.title}</h3>\r\n                    <p className=\"text-justify my-4\">\r\n                        {simulation.description}\r\n                    </p>\r\n\r\n                    {/* <div className={!display ? \"text-center\" : \"d-none\"}>\r\n                        <Spinner animation=\"grow\" className=\"mb-2 mr-2\" />\r\n                        <div>{`Loading ${Math.floor(progression * 100)}%...`}</div>\r\n                    </div> */}\r\n\r\n                    {/* <div className={!display && \"d-none\"}> */}\r\n                    <div>\r\n                        <div className=\"rounded border border-dark p-2\">\r\n                            <Unity\r\n                                className=\"rounded\"\r\n                                unityContent={unityContent}\r\n                            />\r\n                        </div>\r\n\r\n                        <Button\r\n                            variant=\"main\"\r\n                            className=\"d-block mx-auto my-4\"\r\n                            onClick={() => unityContent.setFullscreen(true)}\r\n                        >\r\n                            <FontAwesomeIcon\r\n                                className=\"mr-2\"\r\n                                icon={[\"fas\", \"expand\"]}\r\n                            />\r\n                            Enter Fullscreen\r\n                        </Button>\r\n                    </div>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Simulation;\r\n","import React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer navbar-static-bottom main-footer text-center rounded-top pb-3\">\r\n            <small>Follow us on</small>\r\n\r\n            <ul className=\"list-inline social\">\r\n                <li className=\"list-inline-item clink\">\r\n                    <a\r\n                        href=\"/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"social-icon\"\r\n                    >\r\n                        <FontAwesomeIcon icon={[\"fab\", \"facebook-f\"]} />\r\n                    </a>\r\n                </li>\r\n\r\n                <li className=\"list-inline-item clink\">\r\n                    <a\r\n                        href=\"/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"social-icon\"\r\n                    >\r\n                        <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} />\r\n                    </a>\r\n                </li>\r\n\r\n                <li className=\"list-inline-item clink\">\r\n                    <a\r\n                        href=\"/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"social-icon\"\r\n                    >\r\n                        <FontAwesomeIcon icon={[\"fab\", \"stack-overflow\"]} />\r\n                    </a>\r\n                </li>\r\n\r\n                <li className=\"list-inline-item clink\">\r\n                    <a\r\n                        href=\"/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"social-icon\"\r\n                    >\r\n                        <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} />\r\n                    </a>\r\n                </li>\r\n\r\n                <li className=\"list-inline-item clink\">\r\n                    <a\r\n                        href=\"/\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"social-icon\"\r\n                    >\r\n                        <FontAwesomeIcon icon={[\"fab\", \"github\"]} />\r\n                    </a>\r\n                </li>\r\n\r\n                <div>\r\n                    <Link\r\n                        to=\"/legends\"\r\n                        style={{ fontSize: \"0.9rem\", color: \"white\" }}\r\n                    >\r\n                        Who are the Legends?\r\n                    </Link>\r\n                </div>\r\n            </ul>\r\n\r\n            <small>\r\n                &copy;{new Date().getFullYear()} ClassPortal, Inc | All rights\r\n                reserved\r\n            </small>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SimulationSubjects = (props) => {\r\n    const [simulationSubjects, setSimulationSubjects] = useState([]);\r\n\r\n    // Dummy data for getting at least 3 Simulation Subjects cards\r\n    useEffect(() => {\r\n        let tmp = [\r\n            {\r\n                name: \"biology\",\r\n                description:\r\n                    \"Biology is the natural science that studies life and living organisms, including their physical structure, chemical processes, molecular interactions, physiological mechanisms and development.\",\r\n            },\r\n            {\r\n                name: \"physics\",\r\n                description:\r\n                    \"Physics is the natural science that studies matter, its motion and behavior through space and time, and the related entities of energy and force. Physics is one of the most fundamental scientific disciplines.\",\r\n            },\r\n            {\r\n                name: \"chemistry\",\r\n                description:\r\n                    \"Chemistry is the scientific discipline involved with elements and compounds composed of atoms, molecules and ions: their composition, structure, properties, behavior with other substances.\",\r\n            },\r\n        ];\r\n\r\n        setSimulationSubjects(tmp);\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-7\">\r\n            <Row>\r\n                {simulationSubjects.map((simulationSubject) => (\r\n                    <Col\r\n                        md={4}\r\n                        sm={6}\r\n                        className=\"mb-4\"\r\n                        key={simulationSubject.name}\r\n                    >\r\n                        <Card border=\"main\">\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                className=\"border-bottom border-main\"\r\n                                src={`/static/img/SimulationsSubjects/${simulationSubject.name}.jpg`}\r\n                            />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    {simulationSubject.name\r\n                                        .charAt(0)\r\n                                        .toUpperCase() +\r\n                                        simulationSubject.name.slice(1)}\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    {simulationSubject.description}\r\n                                </Card.Text>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    as={Link}\r\n                                    to={`/simulation/${simulationSubject.name}/`}\r\n                                    variant=\"outline-main\"\r\n                                >\r\n                                    Show Simulations\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SimulationSubjects;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BiologySimulations = (props) => {\r\n    const [simulations, setSimulations] = useState([]);\r\n\r\n    // Dummy data for getting at least 3 comming soon cards\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        for (let i = 0; i < 2; i++) tmp.push(i);\r\n        setSimulations(tmp);\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-7\">\r\n            <Row>\r\n                <>\r\n                    <Col md={4} sm={6} className=\"mb-4\">\r\n                        <Card border=\"main\">\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                className=\"border-bottom border-main\"\r\n                                src=\"/static/img/Simulations/CellSimulation.jpg\"\r\n                            />\r\n                            <Card.Body>\r\n                                <Card.Title>Cell Simulation</Card.Title>\r\n                                <Card.Text>\r\n                                    The cell is the basic structural,\r\n                                    functional, and biological unit of all known\r\n                                    organisms. A cell is the smallest unit of\r\n                                    life. Cells are often called the \"building\r\n                                    blocks of life\".\r\n                                </Card.Text>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    as={Link}\r\n                                    variant=\"main\"\r\n                                    to=\"/simulation/biology/cell/simulation/\"\r\n                                >\r\n                                    Show Simulations\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    {simulations.map((simulation) => (\r\n                        <Col md={4} sm={6} key={simulation} className=\"mb-4\">\r\n                            <Card border=\"main\">\r\n                                <Card.Img\r\n                                    variant=\"top\"\r\n                                    src=\"/static/img/Coming_Soon.jpg\"\r\n                                    className=\"border-bottom border-main\"\r\n                                />\r\n                                <Card.Body>\r\n                                    <Card.Title>Coming Soon</Card.Title>\r\n                                    <Card.Text>\r\n                                        Cras cursus magna libero, eu viverra\r\n                                        augue feugiat eget. In hac habitasse\r\n                                        platea dictumst. Etiam ut sem vel magna\r\n                                        aliquet maximus. Sed pulvinar tellus\r\n                                        turpis, pharetra porta ligula dictum ut.\r\n                                    </Card.Text>\r\n                                    <Button size=\"sm\" disabled variant=\"main\">\r\n                                        Show Simulations\r\n                                    </Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    ))}\r\n                </>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default BiologySimulations;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst PhysicsSimulations = (props) => {\r\n    const [simulations, setSimulations] = useState([]);\r\n\r\n    // Dummy data for getting at least 3 comming soon cards\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        for (let i = 0; i < 3; i++) tmp.push(i);\r\n        setSimulations(tmp);\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-7\">\r\n            <Row>\r\n                {simulations.map((simulation) => (\r\n                    <Col md={4} sm={6} key={simulation} className=\"mb-4\">\r\n                        <Card border=\"main\">\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src=\"/static/img/Coming_Soon.jpg\"\r\n                                className=\"border-bottom border-main\"\r\n                            />\r\n                            <Card.Body>\r\n                                <Card.Title>Coming Soon</Card.Title>\r\n                                <Card.Text>\r\n                                    Cras cursus magna libero, eu viverra augue\r\n                                    feugiat eget. In hac habitasse platea\r\n                                    dictumst. Etiam ut sem vel magna aliquet\r\n                                    maximus. Sed pulvinar tellus turpis,\r\n                                    pharetra porta ligula dictum ut.\r\n                                </Card.Text>\r\n                                <Button size=\"sm\" disabled variant=\"main\">\r\n                                    Show Simulations\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PhysicsSimulations;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst ChemistrySimulations = (props) => {\r\n    const [simulations, setSimulations] = useState([]);\r\n\r\n    // Dummy data for getting at least 3 comming soon cards\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        for (let i = 0; i < 3; i++) tmp.push(i);\r\n        setSimulations(tmp);\r\n    }, []);\r\n\r\n    return (\r\n        <Container className=\"mt-7\">\r\n            <Row>\r\n                {simulations.map((simulation) => (\r\n                    <Col md={4} sm={6} key={simulation} className=\"mb-4\">\r\n                        <Card border=\"main\">\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src=\"/static/img/Coming_Soon.jpg\"\r\n                                className=\"border-bottom border-main\"\r\n                            />\r\n                            <Card.Body>\r\n                                <Card.Title>Coming Soon</Card.Title>\r\n                                <Card.Text>\r\n                                    Cras cursus magna libero, eu viverra augue\r\n                                    feugiat eget. In hac habitasse platea\r\n                                    dictumst. Etiam ut sem vel magna aliquet\r\n                                    maximus. Sed pulvinar tellus turpis,\r\n                                    pharetra porta ligula dictum ut.\r\n                                </Card.Text>\r\n                                <Button size=\"sm\" disabled variant=\"main\">\r\n                                    Show Simulations\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ChemistrySimulations;\r\n","import React, { useContext, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SettingsContext } from \"../../contexts/SettingsContext\";\nimport SignIn from \"./SignIn\";\n\nconst SignInPage = () => {\n    const [signInShow, setSignInShow] = useState(true);\n    const { isAnimated } = useContext(SettingsContext);\n\n    return (\n        <Container>\n            <SignIn\n                show={signInShow}\n                animation={isAnimated}\n                onHide={() => setSignInShow(false)}\n            />\n        </Container>\n    );\n};\n\nexport default SignInPage;\n","import React, { useState } from \"react\";\r\nimport { Container, Card, Button, Form } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CustomAlert from \"./CustomAlert\";\r\n\r\nconst PassworResetConfirm = (props) => {\r\n    const [status, setStatus] = useState(undefined);\r\n    const [variant, setVariant] = useState(\"danger\");\r\n    const params = useParams();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const API_URL = \"/api/v1/accounts/password/reset/confirm/\";\r\n\r\n        const loadData = async () => {\r\n            try {\r\n                const response = await fetch(API_URL, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        new_password1: e.target.new_password1.value,\r\n                        new_password2: e.target.new_password2.value,\r\n                        uid: params.uid,\r\n                        token: params.token,\r\n                    }),\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (response.ok) setVariant(\"success\");\r\n\r\n                setStatus(data[Object.keys(data)[0]]);\r\n            } catch (error) {\r\n                setStatus(error);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n        document.getElementById(\"password-reset-form\").reset();\r\n    };\r\n\r\n    return (\r\n        <Container className=\"vertical-center\">\r\n            <Card className=\"col border-main\" style={{ maxWidth: \"28rem\" }}>\r\n                <Card.Body className=\"p-3 p-sm-4 text-center\">\r\n                    <h5 className=\"card-title mb-4\">Reset Password</h5>\r\n\r\n                    <Form id=\"password-reset-form\" onSubmit={handleSubmit}>\r\n                        {status && (\r\n                            <CustomAlert variant={variant} status={status} />\r\n                        )}\r\n\r\n                        <div className=\"my-3 d-flex\">\r\n                            <span className=\"ccard__input-prepend\">\r\n                                <FontAwesomeIcon\r\n                                    className=\"fa-icon\"\r\n                                    icon={[\"fas\", \"lock\"]}\r\n                                />\r\n                            </span>\r\n\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"new_password1\"\r\n                                placeholder=\"New password\"\r\n                                className=\"ccard__input pl-2\"\r\n                                onChange={() => setStatus(\"\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"my-3 d-flex\">\r\n                            <span className=\"ccard__input-prepend\">\r\n                                <FontAwesomeIcon\r\n                                    className=\"fa-icon\"\r\n                                    icon={[\"fas\", \"lock\"]}\r\n                                />\r\n                            </span>\r\n\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"new_password2\"\r\n                                placeholder=\"Repeat password\"\r\n                                className=\"ccard__input pl-2\"\r\n                                onChange={() => setStatus(\"\")}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mt-4 d-md-flex justify-content-between\">\r\n                            <Button\r\n                                size=\"sm\"\r\n                                type=\"submit\"\r\n                                variant=\"main\"\r\n                                className=\"mb-2 mb-md-0 mr-sm-2\"\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"window-restore\"]}\r\n                                />\r\n                                Reset Password\r\n                            </Button>\r\n\r\n                            <Button\r\n                                size=\"sm\"\r\n                                variant=\"outline-main\"\r\n                                onClick={() => props.history.goBack()}\r\n                            >\r\n                                <FontAwesomeIcon\r\n                                    className=\"mr-2\"\r\n                                    icon={[\"fa\", \"chevron-left\"]}\r\n                                />\r\n                                Go Back\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PassworResetConfirm;\r\n","import React from \"react\";\nimport emoji from \"react-easy-emoji\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Us = () => {\n    return (\n        <Container className=\"vertical-center\">\n            <div className=\"text-center mt-5\">\n                <h3 className=\"mb-6 text-secondary\">\n                    Want to know who are the legends? {emoji(\"😁\")}\n                </h3>\n\n                <Row>\n                    <Col md={1} />\n                    <Col md={4} className=\"mb-4\">\n                        <div className=\"text-center\">\n                            <img\n                                alt=\"profile\"\n                                className=\"rounded-circle img-fluid border border-main\"\n                                style={{ maxWidth: \"13rem\" }}\n                                src=\"/static/img/Legends/dhruvo.jpg\"\n                            />\n\n                            <h4 className=\"font-weight-bold mt-4\">\n                                Shahriar Elahi Dhruvo\n                            </h4>\n\n                            <h6>Full Stack Web Engineer</h6>\n\n                            <div className=\"text-muted\">\n                                Undergraduate Student at Shahjalal University of\n                                Science & Technology\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={2} />\n                    <Col md={4} className=\"mb-4\">\n                        <div className=\"text-center\">\n                            <img\n                                alt=\"profile\"\n                                className=\"rounded-circle img-fluid border border-main\"\n                                style={{ maxWidth: \"13rem\" }}\n                                src=\"/static/img/Legends/tashfi.jpg\"\n                            />\n\n                            <h4 className=\"font-weight-bold mt-4\">\n                                Mohammad Akhlaqur Rahman\n                            </h4>\n\n                            <h6>Backend Web Engineer</h6>\n\n                            <div className=\"text-muted\">\n                                Undergraduate Student at Shahjalal University of\n                                Science & Technology\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={1} />\n                </Row>\n\n                <Row>\n                    <Col md={1} />\n                    <Col md={4} className=\"mb-4\">\n                        <div className=\"text-center\">\n                            <img\n                                alt=\"profile\"\n                                className=\"rounded-circle img-fluid border border-main\"\n                                style={{ maxWidth: \"13rem\" }}\n                                src=\"/static/img/Legends/emon.jpg\"\n                            />\n\n                            <h4 className=\"font-weight-bold mt-4\">\n                                Mahfuzur Rahman Emon\n                            </h4>\n\n                            <h6>Frontend Web Engineer</h6>\n\n                            <div className=\"text-muted\">\n                                Undergraduate Student at Shahjalal University of\n                                Science & Technology\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={2} />\n                    <Col md={4} className=\"mb-4\">\n                        <div className=\"text-center\">\n                            <img\n                                alt=\"profile\"\n                                className=\"rounded-circle img-fluid border border-main\"\n                                style={{ maxWidth: \"13rem\" }}\n                                src=\"/static/img/Legends/sania.jpg\"\n                            />\n\n                            <h4 className=\"font-weight-bold mt-4\">\n                                Sania Rahman\n                            </h4>\n\n                            <h6>Frontend Web Engineer</h6>\n\n                            <div className=\"text-muted\">\n                                Undergraduate Student at Shahjalal University of\n                                Science & Technology\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={1} />\n                </Row>\n\n                <Row>\n                    <Col md={4} />\n                    <Col md={4}>\n                        <div className=\"text-center\">\n                            <img\n                                alt=\"profile\"\n                                className=\"rounded-circle img-fluid border border-main\"\n                                style={{ maxWidth: \"13rem\" }}\n                                src=\"/static/img/Legends/mobin.jpg\"\n                            />\n\n                            <h4 className=\"font-weight-bold mt-4\">\n                                Shakirul Hasan Khan\n                            </h4>\n\n                            <h6>Advisor</h6>\n\n                            <div className=\"text-muted\">\n                                Undergraduate Student at Shahjalal University of\n                                Science & Technology\n                            </div>\n                        </div>\n                    </Col>\n                    <Col md={4} />\n                </Row>\n\n                <h3 className=\"mt-6 text-secondary\">\n                    ... are the Legends who made this awesome webpage{\" \"}\n                    {emoji(\"😎\")}\n                </h3>\n                <div className=\"mt-4\">\n                    <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href=\"https://github.com/ShahriarDhruvo/DU_Hackathon\"\n                    >\n                        <FontAwesomeIcon\n                            className=\"mr-2\"\n                            icon={[\"fab\", \"github\"]}\n                        />\n                        Git hub page of this project\n                    </a>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default Us;\n","import React from \"react\";\r\nimport \"./styles/styles.scss\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport Home from \"./components/Home/Home\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport EmailConfirmationSent from \"./components/generic/EmailConfirmationSent\";\r\nimport EmailConfirm from \"./components/generic/EmailConfirm\";\r\nimport NotFound from \"./components/generic/NotFound\";\r\nimport PasswordReset from \"./components/generic/PasswordReset\";\r\nimport Profile from \"./components/Authentication/Profile\";\r\nimport PasswordChange from \"./components/generic/PasswordChange\";\r\nimport Rooms from \"./components/Rooms/Rooms\";\r\nimport AuthenticationContextProvider from \"./contexts/AuthenticationContext\";\r\nimport SettingsContextProvider from \"./contexts/SettingsContext\";\r\nimport Navs from \"./components/Navbar/Navbar\";\r\nimport Dept from \"./components/Dept/Dept\";\r\nimport CreateCourse from \"./components/CreateCourse/CreateCourse\";\r\n// import Notifications from \"./components/Notifications/Notifications\";\r\nimport MyRooms from \"./components/My_Rooms/MyRooms\";\r\n\r\nimport Simulation from \"./Simulations/Simulation\";\r\n// import FooterPage from \"./components/Footer/Footer\";\r\n// import Footer from \"./components/generic/Footer\";\r\n\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport SimulationSubjects from \"./Simulations/SimulationSubjects\";\r\nimport BiologySimulations from \"./Simulations/BiologySimulations\";\r\nimport PhysicsSimulations from \"./Simulations/PhysicsSimulations\";\r\nimport ChemistrySimulations from \"./Simulations/ChemistrySimulations\";\r\nimport SignInPage from \"./components/Authentication/SignInPage\";\r\nimport PassworResetConfirm from \"./components/generic/PasswordResetConfirm\";\r\nimport Us from \"./components/legends/Us\";\r\n\r\nlibrary.add(far, fas, fab);\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router basename=\"/static\">\r\n            <SettingsContextProvider>\r\n                <AuthenticationContextProvider>\r\n                    <Navs />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/rooms/:room_pk/\"\r\n                            component={Rooms}\r\n                        />\r\n\r\n                        <Route exact path=\"/myrooms/\" component={MyRooms} />\r\n\r\n                        <Route exact path=\"/homerooms/:id/\" component={Dept} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/password/reset/\"\r\n                            component={PasswordReset}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/password/reset/confirm/:uid/:token/\"\r\n                            component={PassworResetConfirm}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/password/change/\"\r\n                            component={PasswordChange}\r\n                        />\r\n\r\n                        <Route exact path=\"/profile/\" component={Profile} />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/email/confirmation/sent/:email/\"\r\n                            component={EmailConfirmationSent}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/email/confirmation/:key/\"\r\n                            component={EmailConfirm}\r\n                        />\r\n                        <Route exact path=\"/login/\" component={SignInPage} />\r\n\r\n                        {/* <Route\r\n                            exact\r\n                            path=\"/notifications\"\r\n                            component={Notifications}\r\n                        /> */}\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/simulation\"\r\n                            component={SimulationSubjects}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/simulation/biology/\"\r\n                            component={BiologySimulations}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/simulation/biology/cell/simulation/\"\r\n                            component={Simulation}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/simulation/physics/\"\r\n                            component={PhysicsSimulations}\r\n                        />\r\n\r\n                        <Route\r\n                            exact\r\n                            path=\"/simulation/chemistry/\"\r\n                            component={ChemistrySimulations}\r\n                        />\r\n\r\n                        <Route exact path=\"/legends/\" component={Us} />\r\n\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n                    <CreateCourse />\r\n                </AuthenticationContextProvider>\r\n            </SettingsContextProvider>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n\r\n    // <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}